swagger: "2.0"
host: "api.boodskap.io"
info: 
  version: "1.0.6"
  title: "Boodskap IoT Platform API"
  description: "Boodskap IoT Platform API (all API's)"
  termsOfService: "https://boodskap.io/terms-conditions"
  contact: 
    name: "Boodskap Team"
  license: 
    name: "MIT"
schemes: 
  - "https"
  - "http"
paths: 
  '/asset/upsert/{atoken}':
    post:
      tags:
        - Create / Update Asset
      summary: Create / Update Asset
      operationId: upsertAsset
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: Asset JSON object
          required: true
          schema:
            $ref: '#/definitions/Asset'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/get/{atoken}/{aid}':
    get:
      tags:
        - Retreive Asset
      summary: Retreive Asset
      operationId: getAsset
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Asset'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/delete/{atoken}/{aid}':
    delete:
      tags:
        - Delete Asset
      summary: Delete Asset
      operationId: deleteAsset
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/deleteall/{atoken}':
    delete:
      tags:
        - Delete All Assets
      summary: Delete All Assets
      operationId: deleteAllAssets
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Assets
      summary: List Assets
      operationId: listAssets
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of assets to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **aid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: aid
          in: query
          description: >-
            Last or First asset id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Asset'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/link/{atoken}/{aid}/{did}':
    get:
      tags:
        - Link an Asset with a Device
      summary: Link an Asset with a Device
      operationId: linkAsset
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset Id
          required: true
          type: string
        - name: did
          in: path
          description: Device Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/unlink/{atoken}/{aid}/{did}':
    get:
      tags:
        - Unlink an Asset from a Device
      summary: Unlink an Asset from a Device
      operationId: unlinkAsset
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset Id
          required: true
          type: string
        - name: did
          in: path
          description: Device Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/listdevices/{atoken}/{aid}':
    get:
      tags:
        - List Asset Devices
      summary: List Asset Devices
      operationId: listAssetDevices
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update Asset Property
      summary: Create / Update Asset Property
      operationId: storeAssetProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: AssetProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/AssetProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/property/get/{atoken}/{id}/{name}':
    get:
      tags:
        - Retreive Asset Property
      summary: Retreive Asset Property
      operationId: getAssetProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AssetProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/property/delete/{atoken}/{id}/{name}':
    delete:
      tags:
        - Delete Stored Asset Property
      summary: Delete Stored Asset Property
      operationId: deleteAssetProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/property/list/{atoken}/{id}/{pageSize}':
    get:
      tags:
        - List Asset Properties
      summary: List Asset Properties
      operationId: listAssetProperties
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AssetProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/upsert/{atoken}':
    post:
      tags:
        - Create / Update Asset Group
      summary: Create / Update Asset Group
      operationId: upsertAssetGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: AssetGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/AssetGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/get/{atoken}/{aid}/{gid}':
    get:
      tags:
        - Retreive Asset Group
      summary: Retreive Asset Group
      operationId: getAssetGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AssetGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/add/{atoken}/{oaid}/{gid}':
    post:
      tags:
        - Add Members(s) to Asset Group
      summary: Add Members(s) to Asset Group
      operationId: addMembersToAssetGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: oaid
          in: path
          description: Owner Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: assetIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/remove/{atoken}/{oaid}/{gid}':
    post:
      tags:
        - Remove Members(s) from Asset Group
      summary: Remove Members(s) from Asset Group
      operationId: removeMembersFromAssetGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: oaid
          in: path
          description: Owner Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: assetIds
          in: body
          description: Array of asset IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/delete/{atoken}/{aid}/{gid}':
    delete:
      tags:
        - Delete Asset Group
      summary: Delete Asset Group
      operationId: deleteAssetGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/deleteall/{atoken}/{aid}':
    delete:
      tags:
        - Delete All Asset Groups
      summary: Delete All Asset Groups
      operationId: deleteAllAssetGroups
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/list/{atoken}/{aid}/{pageSize}':
    get:
      tags:
        - List Asset Groups
      summary: List Asset Groups
      operationId: listAssetGroups
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AssetGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/listmembers/{atoken}/{oaid}/{gid}/{pageSize}':
    get:
      tags:
        - List Asset Group Members
      summary: List Asset Group Members
      operationId: listAssetGroupMembers
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: oaid
          in: path
          description: Owner Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the devices from
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **aid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: aid
          in: query
          description: >-
            Last or First asset id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Asset'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update Asset Group Property
      summary: Create / Update Asset Group Property
      operationId: storeAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: AssetGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/AssetGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/property/get/{atoken}/{id}/{gid}/{name}':
    get:
      tags:
        - Retreive Asset Group Property
      summary: Retreive Asset Group Property
      operationId: getAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Asset Group ID
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AssetGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/property/delete/{atoken}/{id}/{gid}/{name}':
    delete:
      tags:
        - Delete Stored Asset Group Property
      summary: Delete Stored Asset Group Property
      operationId: deleteAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Asset Group ID
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/property/list/{atoken}/{id}/{gid}/{pageSize}':
    get:
      tags:
        - List Asset Group Properties
      summary: List Asset Group Properties
      operationId: listAssetGroupProperties
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Asset Group ID
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AssetGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/count/{atoken}':
    post:
      tags:
        - Count All Assets
      summary: Count All Assets
      operationId: countAllAssets
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/count/{atoken}/{assetId}':
    post:
      tags:
        - Count All Asset Groups
      summary: Count All Asset Groups
      operationId: countAllAssetGroups
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: assetId
          in: path
          description: Asset ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/call/execute/{atoken}':
    post:
      tags:
        - Execute groovy script
      summary: Execute groovy script
      operationId: executeGroovyScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: script
          in: body
          description: GroovyScript JSON
          required: true
          schema:
            $ref: "#/definitions/GroovyScript"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/CallOutput"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/call/execute/template/{atoken}/{template}':
    post:
      tags:
        - Execute Template Script
      summary: Execute Template Script
      operationId: executeTemplateScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: template
          in: path
          description: Template name
          required: true
          type: string
        - name: script
          in: body
          description: TemplateScript JSON
          required: true
          schema:
            $ref: "#/definitions/TemplateScript"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/CallOutput"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/call/execute/rule/{atoken}/{namedrule}':
    post:
      tags:
        - Execute Named Rule Script
      summary: Execute Named Rule Script
      operationId: executeNamedRuleScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: namedrule
          in: path
          description: Named rule name
          required: true
          type: string
        - name: script
          in: body
          description: RuleScript JSON
          required: true
          schema:
            $ref: "#/definitions/RuleScript"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/CallOutput"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/statistics': 
    get: 
      tags:
        - Get Cluster Statistics
      summary: Get Cluster Statistics
      operationId: "getClusterStatistics"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: domainKey
          in: query
          description: Domain Key
          required: false
          type: string
      responses: 
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Counter"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/nodes/list/{atoken}': 
    get: 
      tags:
        - List Cluster Nodes
      summary: List Cluster Nodes
      operationId: "listClusterNodes"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/ClusterNode'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/shutdown/{atoken}': 
    get: 
      tags:
        - Shutdown Cluster
      summary: Shutdown Cluster
      operationId: "shutdownCluster"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/reindex/{atoken}/{type}': 
    get: 
      tags:
        - Re Index Cluster
      summary: Re Index Cluster
      operationId: "reindexCluster"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          required: true
          type: string
          enum:
            - 'DEVICES'
            - 'DOMAIN'
        - name: domainKey
          in: query
          required: false
          type: string
          description: 'Required if **type** is not **DEVICES**'
      responses: 
        "200":
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/service/activate/{atoken}/{sname}/{active}': 
    get: 
      tags:
        - Activate Service
      summary: Activate / Deactivate Service
      operationId: "activateService"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: sname
          in: path
          required: true
          type: string
        - name: active
          in: path
          description: Boolean to activate or deactivate
          required: true
          type: boolean
        - name: domainKey
          in: query
          required: false
          type: string
          description: 'Required if the service is a domain specific service'
      responses: 
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Counter"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/send/{atoken}/{commandId}':
    post:
      tags:
        - Send a Dynamic Command
      summary: Send a Dynamic command to one device
      operationId: sendDynamicCommand
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: commandId
          in: path
          description: Command Identifier
          required: true
          type: integer
          format: int32
        - name: command
          in: body
          description: Command JSON object
          required: true
          schema:
            $ref: '#/definitions/Command'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/broadcast/{atoken}/{commandId}':
    post:
      tags:
        - Broadcast a Dynamic Command
      summary: Broadcast a Dynamic command to multiple devices
      operationId: broadcastDynamicCommand
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: commandId
          in: path
          description: Command Identifier
          required: true
          type: integer
          format: int32
        - name: command
          in: body
          description: BroadcastCommand JSON object
          required: true
          schema:
            $ref: '#/definitions/BroadcastCommand'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/raw/send/{atoken}/{type}':
    post:
      tags:
        - Send a Raw Command
      summary: Send a raw command to a device
      operationId: sendRawCommand
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: data type
          required: true
          type: string
          enum:
            - TEXT
            - JSON
            - HEX
            - BASE64
        - name: command
          in: body
          description: Command JSON object
          required: true
          schema:
            $ref: '#/definitions/Command'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/raw/broadcast/{atoken}/{type}':
    post:
      tags:
        - Broadcast Raw Command
      summary: Broadcast raw command to multiple devices
      operationId: broadcastRawCommand
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: data type
          required: true
          type: string
          enum:
            - TEXT
            - JSON
            - HEX
            - BASE64
        - name: command
          in: body
          description: BroadcastCommand JSON object
          required: true
          schema:
            $ref: '#/definitions/BroadcastCommand'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/template/send/{atoken}/{deviceId}/{commandId}/{templateId}/{system}':
    post:
      tags:
        - Send a Static Command using Template
      summary: Send a Static Command to one device using Template
      operationId: sendStaticCommandUsingTemplate
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: deviceId
          in: path
          description: device id
          required: true
          type: string
        - name: commandId
          in: path
          description: static command id
          required: true
          type: integer
          format: int32
        - name: templateId
          in: path
          description: template id
          required: true
          type: string
        - name: system
          in: path
          description: 'true for system template'
          required: true
          type: boolean
        - name: mergeContent
          in: body
          description: Merge Content JSON object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/property/send/{atoken}/{deviceId}/{commandId}/{property}':
    post:
      tags:
        - Send a Command using Property
      summary: Send a Command using Property
      operationId: sendCommandUsingProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: deviceId
          in: path
          description: device id
          required: true
          type: string
        - name: commandId
          in: path
          description: static command id
          required: true
          type: integer
          format: int32
        - name: property
          in: path
          description: property name
          required: true
          type: string
        - name: command
          in: body
          description: PropertyCommand JSON object
          required: true
          schema:
            $ref: '#/definitions/PropertyCommand'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/status/{atoken}/{deviceId}/{corrId}':
    get:
      tags:
        - Get Command Status
      summary: Get Command Status
      operationId: getCommandStatus
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: deviceId
          in: path
          description: device id
          required: true
          type: string
        - name: corrId
          in: path
          description: Correlation ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cspec/upsert/{atoken}':
    post:
      tags:
        - Create / Update Command Definition
      summary: Create / Update Command Definition
      operationId: upsertCommandDefinition
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: CommandDefinition JSON object
          required: true
          schema:
            $ref: '#/definitions/CommandDefinition'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cspec/get/{atoken}/{cid}':
    get:
      tags:
        - Retreive Command Definition
      summary: Retreive Command Definition
      operationId: getCommandDefinition
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: cid
          in: path
          description: Command id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CommandDefinition'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cspec/delete/{atoken}/{cid}':
    delete:
      tags:
        - Delete Command Definition
      summary: Delete Command Definition
      operationId: deleteCommandDefinition
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: cid
          in: path
          description: Command Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cspec/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Command Definitions
      summary: List Command Definition
      operationId: listCommandDefinitions
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of command definitions to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **cid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: cid
          in: query
          description: >-
            Last or First command id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommandDefinition'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cspec/count/{atoken}':
    post:
      tags:
        - Count All Command Specifications
      summary: Count All Command Specifications
      operationId: countAllCommandSpecs
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/register/{atoken}/{did}/{model}/{version}':
    get:
      tags:
        - Register New Device
      summary: Register New Device
      operationId: registerDevice
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: model
          in: path
          description: Device model id
          required: true
          type: string
        - name: version
          in: path
          description: Firmware version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/upsert/{atoken}':
    post:
      tags:
        - Create / Update Device
      summary: Create / Update Device
      operationId: upsertDevice
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: User JSON object
          required: true
          schema:
            $ref: '#/definitions/Device'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/get/{atoken}/{did}':
    get:
      tags:
        - Retreive Device
      summary: Retreive Device
      operationId: getDevice
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Device'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/delete/{atoken}/{did}':
    delete:
      tags:
        - Delete Device
      summary: Delete Device
      operationId: deleteDevice
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Devices
      summary: List Devices
      operationId: listDevices
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/fcm/list/{atoken}/{pageSize}':
    get:
      tags:
        - List FCM Devices
      summary: List FCM Devices
      operationId: listFCMDevices
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of FCM devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/FCMDevice'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/upsert/{atoken}':
    post:
      tags:
        - Create / Update Device Group
      summary: Create / Update Device Group
      operationId: upsertDeviceGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: DeviceGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/DeviceGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/get/{atoken}/{did}/{gid}':
    get:
      tags:
        - Retreive Device Group
      summary: Retreive Device Group
      operationId: getDeviceGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/add/{atoken}/{odid}/{gid}':
    post:
      tags:
        - Add Members(s) to Device Group
      summary: Add Members(s) to Device Group
      operationId: addMembersToDeviceGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: odid
          in: path
          description: Owner Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: deviceIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/remove/{atoken}/{odid}/{gid}':
    post:
      tags:
        - Remove Members(s) from Device Group
      summary: Remove Members(s) from Device Group
      operationId: removeMembersFromDeviceGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: odid
          in: path
          description: Owner Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: deviceIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/delete/{atoken}/{did}/{gid}':
    delete:
      tags:
        - Delete Device Group
      summary: Delete Device Group
      operationId: deleteDeviceGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/list/{atoken}/{did}/{pageSize}':
    get:
      tags:
        - List Device Groups
      summary: List Device Groups
      operationId: listDeviceGroups
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/listmembers/{atoken}/{odid}/{gid}/{pageSize}':
    get:
      tags:
        - List Device Group Members
      summary: List Device Group Members
      operationId: listDeviceGroupMembers
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: odid
          in: path
          description: Owner Deive ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the devices from
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update Device Property
      summary: Create / Update Device Property
      operationId: storeDeviceProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DeviceProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DeviceProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/property/get/{atoken}/{did}/{name}':
    get:
      tags:
        - Retreive Device Property
      summary: Retreive Device Property
      operationId: getDeviceProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/property/delete/{atoken}/{did}/{name}':
    delete:
      tags:
        - Delete Stored Device Property
      summary: Delete Stored Device Property
      operationId: deleteDeviceProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/property/list/{atoken}/{did}/{pageSize}':
    get:
      tags:
        - List Device Properties
      summary: List Device Properties
      operationId: listDeviceProperties
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update Device Group Property
      summary: Create / Update Device Group Property
      operationId: storeDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DeviceGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DeviceGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/property/get/{atoken}/{did}/{gid}/{name}':
    get:
      tags:
        - Retreive Device Group Property
      summary: Retreive Device Group Property
      operationId: getDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Device Group ID
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/property/delete/{atoken}/{did}/{gid}/{name}':
    delete:
      tags:
        - Delete Stored Device Group Property
      summary: Delete Stored Device Group Property
      operationId: deleteDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Device Group ID
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/property/list/{atoken}/{did}/{gid}/{pageSize}':
    get:
      tags:
        - List Device Group Properties
      summary: List Device Group Properties
      operationId: listDeviceGroupProperties
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Device Group ID
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/count/{atoken}':
    post:
      tags:
        - Count All Devices
      summary: Count All Devices
      operationId: countAllDevices
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/count/{atoken}/{deviceId}':
    post:
      tags:
        - Count All Device Groups
      summary: Count All Device Groups
      operationId: countAllDeviceGroups
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: deviceId
          in: path
          description: Device ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/register/{dkey}/{akey}/{dmdlid}/{ver}':
    get:
      tags:
        - Register New Device Model
      summary: Register New Device Model
      operationId: registerDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: dkey
          in: path
          description: Domain key
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: dmdlid
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: ver
          in: path
          description: Device Model Version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/upsert/{atoken}':
    post:
      tags:
        - Create / Update Device Model
      summary: Create / Update Device Model
      operationId: upsertDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DeviceModel JSON object
          required: true
          schema:
            $ref: '#/definitions/DeviceModel'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/get/{atoken}/{dmid}':
    get:
      tags:
        - Retreive Device Model
      summary: Retreive Device
      operationId: getDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device model id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceModel'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/get/ver/{atoken}/{dmid}/{ver}':
    get:
      tags:
        - Retreive Device Model By Version
      summary: Retreive Device By Version
      operationId: getDeviceModelByVersion
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device model id
          required: true
          type: string
        - name: ver
          in: path
          description: Device model version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceModel'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/delete/{atoken}/{dmid}':
    delete:
      tags:
        - Delete Device Model
      summary: Delete Device Model
      operationId: deleteDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/delete/version/{atoken}/{dmid}/{ver}':
    delete:
      tags:
        - Delete Device Model Version
      summary: Delete Device Model Version
      operationId: deleteDeviceModelVersion
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model Id
          required: true
          type: string
        - name: ver
          in: path
          description: Device Model Version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Device Models
      summary: List Device Models
      operationId: listDeviceModels
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of device models to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **mdlid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: mdlid
          in: query
          description: >-
            Last or First model id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceModel'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/list/model/{atoken}/{pageSize}/{mdlid}':
    get:
      tags:
        - List By Device Model
      summary: List By Device Model
      operationId: listByDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: mdlid
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of device models to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **ver** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: ver
          in: query
          description: >-
            Last or First version of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceModel'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update Device Model Property
      summary: Create / Update Device Model Property
      operationId: storeDeviceModelProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DeviceModelProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DeviceModelProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/property/get/{atoken}/{id}/{name}':
    get:
      tags:
        - Retreive Device Model Property
      summary: Retreive Device Property
      operationId: getDeviceModelProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceModelProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/property/list/{atoken}/{id}/{pageSize}':
    get:
      tags:
        - List Device Model Properties
      summary: List Device Model Properties
      operationId: listDeviceModelProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceModelProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/property/delete/{atoken}/{id}/{name}':
    delete:
      tags:
        - Delete Stored Device Model Property
      summary: Delete Stored Device Model Property
      operationId: deleteDeviceModelProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/count/{atoken}':
    post:
      tags:
        - Count All Device Models
      summary: Count All Device Models
      operationId: countAllDeviceModels
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/count/mode/{atoken}/{mdlid}':
    post:
      tags:
        - Count By Device Model
      summary: Count By Device Model
      operationId: countByDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: mdlid
          in: path
          description: Device Model ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/register': 
    post: 
      description: "Returns all domains from the system that the user has access to"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Register New Domain
      summary: Register New Domain
      operationId: "register"
      parameters:
        - name: user
          in: body
          description: User object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses: 
        "200":
          description: "Newly created user and domain"
          schema: 
            $ref: "#/definitions/UserDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/password/reset/{email}': 
    get: 
      description: "Reset a user's password, platform will send an email with temporary password"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Reset User Password
      summary: Register User Password
      operationId: "resetUserPassword"
      parameters:
        - name: email
          in: path
          description: Email ID
          required: true
          type: string
      responses: 
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/list/{atoken}/{pageSize}': 
    get: 
      description: "Returns all domain keys from the system that the user has access to"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - List Domains
      summary: List Domains
      operationId: "list"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of domains to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **dkey** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: dkey
          in: query
          description: >-
            Last or First domain key of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses: 
        "200":
          description: "List of domains keys"
          schema:
            type: array
            items:
              type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/login/{email}/{passwd}': 
    get: 
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Login
      summary: Login
      operationId: "login"
      parameters:
        - name: email
          in: path
          required: true
          type: string
        - name: passwd
          in: path
          required: true
          type: string
      responses: 
        "200":
          description: "UserDomain Object"
          schema: 
            $ref: "#/definitions/UserDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/logout/{atoken}': 
    get: 
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Logout
      summary: Logout
      operationId: "logout"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
      responses: 
        "200":
          description: "Logged out successfully"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/link/{atoken}': 
    get: 
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Link Another Domain
      summary: Link Another Domain
      operationId: "linkDomain"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: domainKey
          description: Domain key
          in: query
          required: true
          type: string
        - name: apiKey
          description: Domain API key
          in: query
          required: true
          type: string
        - name: label
          description: Menu Label
          in: query
          required: true
          type: string
      responses: 
        "200":
          description: "Linked successfully"
          schema: 
            $ref: "#/definitions/LinkedDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/unlink/{atoken}': 
    get: 
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Unlink a Domain
      summary: Unlink a Domain
      operationId: "unlinkDomain"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: domainKey
          description: Domain key
          in: query
          required: true
          type: string
      responses: 
        "200":
          description: "Unlinked successfully"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/loginas/{email}/{passwd}/{dkey}': 
    get: 
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Login as another domain admin
      summary: Login as another domain admin
      operationId: "loginAs"
      parameters:
        - name: email
          description: System admin user name/email
          in: path
          required: true
          type: string
        - name: passwd
          in: path
          required: true
          type: string
        - name: dkey
          description: Domain key
          in: path
          required: true
          type: string
      responses: 
        "200":
          description: "UserDomain Object"
          schema: 
            $ref: "#/definitions/UserDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update Domain Property
      summary: Create / Update Domain Property
      operationId: storeDomainProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: entity
          in: body
          description: DomainProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/property/get/{atoken}/{name}':
    get:
      tags:
        - Retreive Domain Property
      summary: Retreive Domain Property
      operationId: getDomainProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/property/delete/{atoken}/{name}':
    delete:
      tags:
        - Delete Stored Domain Property
      summary: Delete Stored Domain Property
      operationId: deleteDomainProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/property/deleteall/{atoken}':
    delete:
      tags:
        - Delete All Stored Domain Properties
      summary: Delete All Stored Domain Properties
      operationId: deleteAllDomainProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/property/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Domain Properties
      summary: List Domain Properties
      operationId: listDomainProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update Domain Asset Group Property
      summary: Create / Update Domain Asset Group Property
      operationId: storeDomainAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: entity
          in: body
          description: DomainAssetGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainAssetGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/property/get/{atoken}/{gid}/{name}':
    get:
      tags:
        - Retreive Domain Asset Group Property
      summary: Retreive Domain Asset Group Property
      operationId: getDomainAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          description: Group ID
          in: path
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainAssetGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/property/delete/{atoken}/{gid}/{name}':
    delete:
      tags:
        - Delete Stored Domain Asset Group Property
      summary: Delete Stored Domain Asset Group Property
      operationId: deleteDomainAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/property/deleteall/{atoken}/{gid}':
    delete:
      tags:
        - Delete All Stored Domain Asset Group Properties
      summary: Delete All Stored Domain Asset Group Properties
      operationId: deleteAllDomainAssetGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/property/list/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - List Domain Asset Group Properties
      summary: List Domain Asset Group Properties
      operationId: listDomainAssetGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          description: Group ID
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainAssetGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/upsert/{atoken}':
    post:
      tags:
        - Create / Update Domain Asset Group
      summary: Create / Update Domain Asset Group
      operationId: upsertDomainAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DomainAssetGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainAssetGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/get/{atoken}/{gid}':
    get:
      tags:
        - Retreive Domain Asset Group
      summary: Retreive Domain Asset Group
      operationId: getDomainAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainAssetGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/add/{atoken}/{gid}':
    post:
      tags:
        - Add Members(s) to Domain Asset Group
      summary: Add Members(s) to Doain Asset Group
      operationId: addMembersToDomainAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: assetIds
          in: body
          description: Array of asset IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/remove/{atoken}/{gid}':
    post:
      tags:
        - Remove Members(s) from Domain Asset Group
      summary: Remove Members(s) from Domain Asset Group
      operationId: removeMembersFromDomainAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: assetIds
          in: body
          description: Array of asset IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/delete/{atoken}/{gid}':
    delete:
      tags:
        - Delete Domain Asset Group
      summary: Delete Domain Asset Group
      operationId: deleteDomainAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Domain Asset Groups
      summary: List Domain Asset Groups
      operationId: listDomainAssetGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainAssetGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/listmembers/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - List Domain Asset Group Members
      summary: List Domain Asset Group Members
      operationId: listDomain AssetGroupMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the assets from
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of assets to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First asset id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Asset'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/upsert/{atoken}':
    post:
      tags:
        - Create / Update Domain Device Group
      summary: Create / Update Domain Device Group
      operationId: upsertDomainDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DomainDeviceGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainDeviceGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/get/{atoken}/{gid}':
    get:
      tags:
        - Retreive Domain Device Group
      summary: Retreive Domain Device Group
      operationId: getDomainDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainDeviceGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/add/{atoken}/{gid}':
    post:
      tags:
        - Add Members(s) to Domain Device Group
      summary: Add Members(s) to Doain Device Group
      operationId: addMembersToDomainDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: deviceIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/remove/{atoken}/{gid}':
    post:
      tags:
        - Remove Members(s) from Domain Device Group
      summary: Remove Members(s) from Domain Device Group
      operationId: removeMembersFromDomainDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: deviceIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/delete/{atoken}/{gid}':
    delete:
      tags:
        - Delete Domain Device Group
      summary: Delete Domain Device Group
      operationId: deleteDomainDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Domain Device Groups
      summary: List Domain Device Groups
      operationId: listDomainDeviceGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainDeviceGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/listmembers/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - List Domain Device Group Members
      summary: List Domain Device Group Members
      operationId: listDomain DeviceGroupMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the devices from
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update Domain Device Group Property
      summary: Create / Update Domain Device Group Property
      operationId: storeDomainDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: entity
          in: body
          description: DomainDeviceGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainDeviceGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/property/get/{atoken}/{gid}/{name}':
    get:
      tags:
        - Retreive Domain Device Group Property
      summary: Retreive Domain Device Group Property
      operationId: getDomainDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          description: Group ID
          in: path
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainDeviceGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/property/delete/{atoken}/{gid}/{name}':
    delete:
      tags:
        - Delete Stored Domain Device Group Property
      summary: Delete Stored Domain Device Group Property
      operationId: deleteDomainDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/property/deleteall/{atoken}/{gid}':
    delete:
      tags:
        - Delete All Stored Domain Device Group Properties
      summary: Delete All Stored Domain Device Group Properties
      operationId: deleteAllDomainDeviceGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/property/list/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - List Domain Device Group Properties
      summary: List Domain Device Group Properties
      operationId: listDomainDeviceGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          description: Group ID
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainDeviceGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/upsert/{atoken}':
    post:
      tags:
        - Create / Update Domain User Group
      summary: Create / Update Domain User Group
      operationId: upsertDomainUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DomainUserGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainUserGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/get/{atoken}/{gid}':
    get:
      tags:
        - Retreive Domain User Group
      summary: Retreive Domain User Group
      operationId: getDomainUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainUserGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Domain User Groups
      summary: List Domain User Groups
      operationId: listDomainUserGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainUserGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/delete/{atoken}/{gid}':
    delete:
      tags:
        - Delete Domain User Group
      summary: Delete Domain User Group
      operationId: deleteDomainUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/add/{atoken}/{gid}':
    post:
      tags:
        - Add Members(s) to Domain User Group
      summary: Add Members(s) to Doain User Group
      operationId: addMembersToDomainUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: userIds
          in: body
          description: Array of user IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/remove/{atoken}/{gid}':
    post:
      tags:
        - Remove Members(s) from Domain User Group
      summary: Remove Members(s) from Domain User Group
      operationId: removeMembersFromDomainUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: userIds
          in: body
          description: Array of user IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/listmembers/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - List Domain User Group Members
      summary: List Domain User Group Members
      operationId: listDomainUserGroupMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the users from
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of users to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First user id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update Domain User Group Property
      summary: Create / Update Domain User Group Property
      operationId: storeDomainUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: entity
          in: body
          description: DomainUserGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainUserGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/property/get/{atoken}/{gid}/{name}':
    get:
      tags:
        - Retreive Domain User Group Property
      summary: Retreive Domain User Group Property
      operationId: getDomainUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          description: Group ID
          in: path
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainUserGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/property/delete/{atoken}/{gid}/{name}':
    delete:
      tags:
        - Delete Stored Domain User Group Property
      summary: Delete Stored Domain User Group Property
      operationId: deleteDomainUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/property/deleteall/{atoken}/{gid}':
    delete:
      tags:
        - Delete All Stored Domain User Group Properties
      summary: Delete All Stored Domain User Group Properties
      operationId: deleteAllDomainUserGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/property/list/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - List Domain User Group Properties
      summary: List Domain User Group Properties
      operationId: listDomainUserGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          description: Group ID
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainUserGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/count/{atoken}':
    post:
      tags:
        - Count All Domains
      summary: Count All Domains
      operationId: countAllDomains
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/drules/upsert/{atoken}':
    post:
      tags:
        - Create / Update Domain Rule
      summary: Create / Update Domain Rule
      operationId: upsertDomainRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DomainRule JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainRule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/drules/get/{atoken}':
    get:
      tags:
        - Retreive Domain Rule
      summary: Retreive Domain Rule
      operationId: getDomainRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/drules/delete/{atoken}':
    delete:
      tags:
        - Delete Domain Rule
      summary: Delete Domain Rule
      operationId: deleteDomainRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/drules/compile/{atoken}':
    post:
      tags:
        - Compile a  Domain Rule
      summary: Compile a Domain Rule
      operationId: compileDomainRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: Rule JSON object
          required: true
          schema:
            $ref: '#/definitions/Rule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/drules/count/{atoken}':
    post:
      tags:
        - Count All Domain Rules
      summary: Count All Domain Rules
      operationId: countAllDomainRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/upsert/{atoken}':
    post:
      tags:
        - Create / Update Event
      summary: Create / Update Event
      operationId: upsertEvent
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: Event JSON object
          required: true
          schema:
            $ref: '#/definitions/Event'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/get/{atoken}/{eid}':
    get:
      tags:
        - Retreive Event
      summary: Retreive Event
      operationId: getEvent
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Event'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/delete/{atoken}/{eid}':
    delete:
      tags:
        - Delete Event
      summary: Delete Event
      operationId: deleteEvent
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/count/{atoken}':
    post:
      tags:
        - Count All Events
      summary: Count All Events
      operationId: countAllEvents
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/clear/{atoken}':
    delete:
      tags:
        - Delete all Events
      summary: Delete all Events
      operationId: deleteAllEvents
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Events
      summary: List Events
      operationId: listEvents
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of events to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **eid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: eid
          in: query
          description: >-
            Last or First event id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/register/{atoken}/{eid}/{channel}/{address}':
    post:
      tags:
        - Register Event
      summary: Register Event
      operationId: registerEvent
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int32
        - name: channel
          in: path
          description: Notification Channel
          required: true
          type: string
          enum:
            - 'EMAIL'
            - 'SMS'
            - 'VOICE'
            - 'FCM'
        - name: address
          in: path
          description: Notification address (email, phone, etc...)
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/unregister/{atoken}/{eid}/{channel}/{address}':
    delete:
      tags:
        - Unregister Event
      summary: Unregister Event
      operationId: unregisterEvent
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int32
        - name: channel
          in: path
          description: Notification Channel
          required: true
          type: string
          enum:
            - 'EMAIL'
            - 'SMS'
            - 'VOICE'
            - 'FCM'
        - name: address
          in: path
          description: Notification address (email, phone, etc...)
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/list/{atoken}/{eid}/{channel}/{pageSize}':
    get:
      tags:
        - List Event Registrations
      summary: List Event Registrations
      operationId: listEventRegistrations
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int32
        - name: channel
          in: path
          description: Notification Channel
          required: true
          type: string
          enum:
            - 'EMAIL'
            - 'SMS'
            - 'VOICE'
            - 'FCM'
        - name: pageSize
          in: path
          description: Maximum number of events to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **address** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: address
          in: query
          description: >-
            Last or First to address of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EventRegistration'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/id/unregister/{atoken}/{eid}':
    delete:
      tags:
        - Unregister Event By ID
      summary: Unregister Event By ID
      operationId: unregisterEventByID
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/channel/unregister/{atoken}/{eid}/{channel}':
    delete:
      tags:
        - Unregister Event By Channel
      summary: Unregister Event By Channel
      operationId: unregisterEventByChannel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int32
        - name: channel
          in: path
          description: Notification Channel
          required: true
          type: string
          enum:
            - 'EMAIL'
            - 'SMS'
            - 'VOICE'
            - 'FCM'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/count/{atoken}':
    post:
      tags:
        - Count All Event Registrations
      summary: Count All Registrations
      operationId: countAllEventRegistrations
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/id/count/{atoken}/{eid}':
    post:
      tags:
        - Count All Event Registrations for ID
      summary: Count All Event Registrations for ID
      operationId: countAllEventRegistrationsForID
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/channel/count/{atoken}/{eid}/{channel}':
    post:
      tags:
        - Count All Event Registrations for Channel
      summary: Count All Event Registrations for Channel
      operationId: countAllEventRegistrationsForChannel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int32
        - name: channel
          in: path
          description: Notification Channel
          required: true
          type: string
          enum:
            - 'EMAIL'
            - 'SMS'
            - 'VOICE'
            - 'FCM'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fcm/register/{atoken}/{did}/{model}/{version}/{token}':
    get:
      tags:
        - Register / Update New FCM Device
      summary: Register / Update New FCM Device
      operationId: upsertFCMDevice
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: model
          in: path
          description: Device model id
          required: true
          type: string
        - name: version
          in: path
          description: Firmware version
          required: true
          type: string
        - name: token
          in: path
          description: Google Firebase Token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/upload/{atoken}':
    post:
      tags:
        - Upload File
      summary: Upload File
      operationId: uploadFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: query
          description: True if public access is allowed
          required: false
          type: boolean
        - name: id
          in: query
          description: if id specified, update operation performed
          required: false
          type: string
          format: uuid
        - name: binfile
          in: formData
          description: File binary file content
          type: file
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/IDResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/upload/as/{atoken}':
    post:
      tags:
        - Upload File As
      summary: Upload File As
      operationId: uploadFileAs
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: content
          in: body
          description: FileContent JSON object
          required: true
          schema:
            $ref: '#/definitions/FileContent'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/IDResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/download/{atoken}/{id}':
    get:
      tags:
        - Download file
      summary: Download file
      operationId: downloadFile
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: File unique UUID
          required: true
          type: string
      responses:
        '200':
          description: Binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/public/download/{id}':
    get:
      tags:
        - Download Public file
      summary: Download Public file
      operationId: downloadPublicFile
      parameters:
        - name: id
          in: path
          description: File unique UUID
          required: true
          type: string
      responses:
        '200':
          description: Binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/delete/{atoken}/{id}':
    delete:
      tags:
        - Delete File
      summary: Delete File
      operationId: deleteFile
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: File unique UUID
          required: true
          type: string
        - name: ispublic
          in: query
          description: True if public access is allowed
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/upload/{atoken}/{dmid}/{ver}':
    post:
      tags:
        - Upload Device Firmware
      summary: Upload Device Firmware
      operationId: uploadFirmware
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device model id
          required: true
          type: string
        - name: ver
          in: path
          description: Device model version
          required: true
          type: string
        - name: binfile
          in: formData
          description: Firmware binary file content
          type: file
          required: true
        - name: desc
          in: formData
          description: Note about the firmware
          type: string
          required: false
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/download/{atoken}/{dmid}/{ver}':
    get:
      tags:
        - Download firmware file
      summary: Download firmware file
      operationId: downloadFirmwareFile
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device model id
          required: true
          type: string
        - name: ver
          in: path
          description: Device model version
          required: true
          type: string
      responses:
        '200':
          description: Firmware binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/delete/{atoken}/{dmid}/{ver}':
    delete:
      tags:
        - Delete Device Firmware
      summary: Delete Device Firmware
      operationId: deleteFirmware
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model id
          required: true
          type: string
        - name: ver
          in: path
          description: Device Model version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/get/{atoken}/{dmid}/{ver}':
    get:
      tags:
        - Get Firmware
      summary: Get Firmware
      operationId: getFirmware
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model id
          required: true
          type: string
        - name: ver
          in: path
          description: Firmware Version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Firmware'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/list/{atoken}/{dmid}/{pageSize}':
    get:
      tags:
        - List Firmware
      summary: List Firmware
      operationId: listFirmware
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model id
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of firmware to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **ver** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: ver
          in: query
          description: >-
            Last or First firmware version of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Firmware'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/count/{atoken}':
    post:
      tags:
        - Count All Firmwares
      summary: Count All Firmwares
      operationId: countAllFirmwares
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/model/count/{atoken}/{dmid}':
    post:
      tags:
        - Count All Firmware Versions
      summary: Count All Firmware Versions
      operationId: countAllFirmwareVersions
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/ota/batch/count/{atoken}/{type}':
    post:
      tags:
        - Get OTA Batch Count
      summary: Get OTA Batch Count
      operationId: getOTABatchCount
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: OTA Batch Type
          required: true
          type: string
          enum:
            - MODEL
            - DEVICE
        - name: filterStates
          in: body
          description: Array of states
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - CREATING 
                - CREATED
                - RUNNING
                - CANCELLED
                - FAILED
                - COMPLETE
                - EXPIRED
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/ota/batch/list/{atoken}/{type}/{pageSize}':
    get:
      tags:
        - List OTA Batches
      summary: List OTA Batches
      operationId: listOTABatches
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: OTA Batch Type
          required: true
          type: string
          enum:
            - MODEL
            - DEVICE
        - name: pageSize
          in: path
          description: Maximum number of members to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **id** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: id
          in: query
          description: >-
            Last or First batch id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: filterStates
          in: body
          description: Array of states
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - CREATING 
                - CREATED
                - RUNNING
                - CANCELLED
                - FAILED
                - COMPLETE
                - EXPIRED
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTABatch'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/ota/batch/member/count/{atoken}/{type}/{id}':
    post:
      tags:
        - Get OTA Batch Member Count
      summary: Get OTA Batch Member Count
      operationId: getOTABatchMemberCount
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: OTA Batch Type
          required: true
          type: string
          enum:
            - MODEL
            - DEVICE
        - name: id
          in: path
          description: OTA Batch ID
          required: true
          type: string
        - name: filterStates
          in: body
          description: Array of states
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - PENDING
                - DOWNLOADING
                - FAILED
                - SUCCESS
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/ota/batch/member/list/{atoken}/{type}/{id}/{pageSize}':
    get:
      tags:
        - List OTA Batch Members
      summary: List OTA Batch Members
      operationId: listOTABatchMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: OTA Batch Type
          required: true
          type: string
          enum:
            - MODEL
            - DEVICE
        - name: id
          in: path
          description: OTA Batch ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of members to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: filterStates
          in: body
          description: Array of states
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - PENDING
                - DOWNLOADING
                - FAILED
                - SUCCESS
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTABatchMember'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fr/upsert/{atoken}': 
    post: 
      tags:
        - Create Update Face Recognition Model
      summary: Create Update Face Recognition Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "upsertFRModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: FRModel JSON object
          required: true
          schema:
            $ref: '#/definitions/FRModel'
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fr/delete/{atoken}/{name}': 
    delete: 
      tags:
        -  Delete Face Recognition Model
      summary: Delete Face Recognition Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "deleteFRModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: FRModel name
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fr/get/{atoken}/{name}': 
    get: 
      tags:
        -  Retreive Face Recognition Model
      summary: Retreive Face Recognition Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "retreiveFRModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: FRModel name
          required: true
          type: string
      responses: 
        "200":
          description: "FRModel JSON Object"
          schema: 
            $ref: "#/definitions/FRModel"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fr/train/{atoken}/{name}': 
    get: 
      tags:
        -  Train / Re-Train Face Recognition Model
      summary: Train / Re-Train Face Recognition Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "trainFRModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: FRModel name
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fr/predict/{atoken}/{name}': 
    post: 
      tags:
        -  Predict Face
      summary: Predict Face
      consumes:
        - multipart/form-data
      produces:
        - "application/json"
      operationId: "predictFace"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: FRModel name
          required: true
          type: string
        - name: binfile
          in: formData
          description: Face image binary file content
          type: file
          required: true
      responses: 
        "200":
          description: "FRPredictList JSON Object"
          schema: 
            $ref: "#/definitions/FRPredictList"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fr/list/{atoken}/{pageSize}': 
    get: 
      tags:
        -  List Face Recognition Models
      summary: List Face Recognition Models
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "listFRModels"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Page size
          required: true
          type: integer
          format: int32
        - name: name
          in: query
          description: Last FRModel name to perform next list operation
          required: false
          type: string
      responses: 
        "200":
          description: "FRModelList JSON Object"
          schema: 
            $ref: "#/definitions/FRModelList"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fr/list/labels/{atoken}/{name}/{pageSize}': 
    get: 
      tags:
        -  List Face Recognition Labels
      summary: List Face Recognition Labels
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "listFRLabels"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Model name to perform next list operation
          required: true
          type: string
        - name: pageSize
          in: path
          description: Page size
          required: true
          type: integer
          format: int32
        - name: lastLabel
          in: query
          description: Last label name to perform next list operation
          required: false
          type: string
      responses: 
        "200":
          description: "FRLabelList JSON Object"
          schema: 
            $ref: "#/definitions/FRLabelList"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fr/image/list/{atoken}/{name}/{label}/{pageSize}': 
    get: 
      tags:
        -  List Face Recognition Training Images
      summary: List Face Recognition Training Images
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "listFRTrainingImages"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: FRModel name
          required: true
          type: string
        - name: label
          in: path
          description: Image classification label name
          required: true
          type: string
        - name: pageSize
          in: path
          description: Page size
          required: true
          type: integer
          format: int32
        - name: lastId
          in: query
          description: Last Image UUID for next page operation
          required: false
          type: string
      responses: 
        "200":
          description: "FRImageList JSON Object"
          schema: 
            $ref: "#/definitions/FRImageList"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fr/image/upload/{atoken}/{name}':
    post:
      tags:
        - Upload Face Recognition Training Image
      summary: Upload Face Recognition Training Image
      operationId: uploadFRTrainingImage
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: FRModel name
          required: true
          type: string
        - name: binfile
          in: formData
          description: Image binary file content
          type: file
          required: true
        - name: label
          in: formData
          description: Image classification label
          type: string
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fr/image/download/{atoken}/{name}/{label}/{id}':
    get:
      tags:
        - Download Face Recognition Training Image
      summary: Download Face Recognition Training Image
      operationId: downloadFRTrainingImage
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: FRModel name
          required: true
          type: string
        - name: label
          in: path
          description: Image classification label name
          required: true
          type: string
        - name: id
          in: path
          description: Unique image identifier
          required: true
          type: string
      responses:
        '200':
          description: Image binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fr/download/{atoken}/{name}':
    get:
      tags:
        - Download Trained Binary Model
      summary: Download Trained Binary Model
      operationId: downloadTrainedFRModel
      consumes:
        - application/json
      produces:
        - multipart/form-data
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Face Recognition Model Name
          required: true
          type: string
      responses:
        '200':
          description: Trained Binary Model File
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/upsert/{atoken}/{geotype}':
    post:
      tags:
        - Create / Update Geofence
      summary: Create / Update Geofence
      operationId: upsertGeofence
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: geotype
          in: path
          description: Geoshape type 
          required: true
          type: string
          enum:
            - POINT
            - ENVELOPE
            - CIRCLE
            - LINESTRING
            - POLYGON
            - MULTIPOINT
            - MULTILINESTRING
            - MULTIPOLYGON
            - GEOMETRYCOLLECTION
        - name: dto
          in: body
          description: Geofence JSON object
          required: true
          schema:
            $ref: '#/definitions/Geofence'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/get/{atoken}/{name}':
    get:
      tags:
        - Retreive Geofence
      summary: Retreive Geofence
      operationId: getGeofence
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Geofence Name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Geofence'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/delete/{atoken}/{name}':
    delete:
      tags:
        - Delete Geofence
      summary: Delete Geofence
      operationId: deleteGeofence
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Geofence Name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/clear/{atoken}':
    delete:
      tags:
        - Delete All Geofences
      summary: Delete All Geofences
      operationId: deleteAllGeofences
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Geofences
      summary: List Geofences
      operationId: listGeofences
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of assets to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First geofence name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Geofence'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update Geofence Property
      summary: Create / Update Geofence Property
      operationId: storeGeofenceProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: GeofenceProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/GeofenceProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/property/get/{atoken}/{fname}/{name}':
    get:
      tags:
        - Retreive Geofence Property
      summary: Retreive Geofence Property
      operationId: getGeofenceProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: fname
          in: path
          description: Geofence Name
          required: true
          type: string
        - name: name
          in: path
          description: Poperty Name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/GeofenceProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/property/delete/{atoken}/{fname}/{name}':
    delete:
      tags:
        - Delete Stored Geofence Property
      summary: Delete Stored Geofence Property
      operationId: deleteGeofenceProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: fname
          in: path
          description: Geofence Name
          required: true
          type: string
        - name: name
          in: path
          description: Property Name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/property/list/{atoken}/{fname}/{pageSize}':
    get:
      tags:
        - List Geofence Properties
      summary: List Geofence Properties
      operationId: listGeofenceProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: fname
          in: path
          description: Geofence Name
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/GeofenceProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/count/{atoken}':
    post:
      tags:
        - Count All Geofences
      summary: Count All Geofences
      operationId: countAllGeofences
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/global/data/insert/{atoken}': 
    post: 
      tags:
        - Create Global Data
      summary: Create Global Data
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "insertGlobalData"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: data
          in: body
          description: Any data as a string representation
          required: true
          schema:
            $ref: '#/definitions/GlobalData'
      responses: 
        "200":
          description: "GDResult JSON Object"
          schema: 
            $ref: "#/definitions/GDResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/global/data/update/{atoken}/{id}': 
    post: 
      tags:
        - Update Global Data
      summary: Update Global Data
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "updateGlobalData"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: ID of existing record
          required: true
          type: string
        - name: data
          in: body
          description: Any data as a string representation
          required: true
          schema:
            $ref: '#/definitions/GlobalData'
      responses:
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/global/data/get/{id}/{domainKey}': 
    get: 
      tags:
        - Get Global Data
      summary: Get Global Data
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "getGlobalData"
      parameters:
        - name: id
          in: path
          description: Unique ID of the data
          required: true
          type: string
        - name: domainKey
          in: path
          description: Domain Key associated with the data
          required: true
          type: string
      responses: 
        "200":
          description: "GlobalData JSON Object"
          schema: 
            $ref: "#/definitions/GlobalData"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/global/data/delete/{atoken}/{id}': 
    delete: 
      tags:
        - Delete Global Data
      summary: Delete Global Data
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "deleteGlobalData"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: ID of existing record
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/groovy/upload/script/{atoken}/{ispublic}/{isopen}':
    post:
      tags:
        - Upload Groovy Script
      summary: Upload Groovy Script
      operationId: uploadGroovyScript
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: path
          description: True if public script file (admin access)
          required: true
          type: boolean
        - name: isopen
          in: path
          description: True if open source (admin access)
          required: true
          type: boolean
        - name: scriptFile
          in: formData
          description: Groovy script file
          type: file
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/TextContent"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/groovy/upload/jar/{atoken}/{ispublic}/{name}':
    post:
      tags:
        - Upload Groovy Jar File
      summary: Upload Groovy Jar File
      operationId: uploadGroovyJarFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: path
          description: True if public access is allowed (admin access)
          required: true
          type: boolean
        - name: name
          in: path
          description: Jar file name
          required: true
          type: string
        - name: jarFile
          in: formData
          description: Binary Jar File
          type: file
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/groovy/delete/jar/{atoken}/{ispublic}/{name}':
    delete:
      tags:
        - Delete Groovy Jar File
      summary: Delete Groovy Jar File
      operationId: deleteGroovyJarFile
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: path
          description: True if public jar file (admin access)
          required: true
          type: boolean
        - name: name
          in: path
          description: Jar file name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/groovy/delete/script/{atoken}/{ispublic}/{name}':
    delete:
      tags:
        - Delete Groovy Script File
      summary: Delete Groovy Script File
      operationId: deleteGroovyScriptFile
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: path
          description: True if public script file (admin access)
          required: true
          type: boolean
        - name: name
          in: path
          description: Script file name (package.classname)
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/location/upsert/{atoken}':
    post:
      tags:
        - Create / Update Location
      summary: Create / Update Location
      operationId: upsertLocation
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: Location JSON object
          required: true
          schema:
            $ref: '#/definitions/Location'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/location/delete/{atoken}/{at}':
    delete:
      tags:
        - Delete Location
      summary: Delete Location
      operationId: deleteLocation
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: at
          in: path
          description: Time UUID 
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/location/asset/deleteall/{atoken}/{assetId}':
    delete:
      tags:
        - Delete All Asset Locations
      summary: Delete All Asset Locations
      operationId: deleteAllAssetLocations
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: assetId
          in: path
          description: Asset ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/location/device/deleteall/{atoken}/{deviceId}':
    delete:
      tags:
        - Delete All Device Locations
      summary: Delete All Device Locations
      operationId: deleteAllDeviceLocations
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: deviceId
          in: path
          description: Device ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/location/clear/{atoken}':
    delete:
      tags:
        - Clear All Locations
      summary: Clear All Locations
      operationId: clearAllLocations
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/lookup/put/{atoken}':
    post:
      tags:
        - Put Lookup Data
      summary: Put Lookup Data
      operationId: putLookupData
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: script
          in: body
          description: Lookup JSON
          required: true
          schema:
            $ref: "#/definitions/Lookup"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/lookup/get/{atoken}':
    post:
      tags:
        - Get Lookup Data
      summary: Get Lookup Data
      operationId: getLookupData
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: script
          in: body
          description: LookupGet JSON
          required: true
          schema:
            $ref: "#/definitions/LookupGet"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/LookupResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/lookup/remove/{atoken}':
    post:
      tags:
        - Delete Lookup Data
      summary: Delete Lookup Data
      operationId: deleteLookupData
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: script
          in: body
          description: LookupDelete JSON
          required: true
          schema:
            $ref: "#/definitions/LookupDelete"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/message/get/{atoken}/{muid}':
    get:
      tags:
        - Retreive Device Message
      summary: Retreive Device Message
      operationId: getDeviceMessage
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: muid
          in: path
          description: message UUID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceMessage'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/message/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Device Messages
      summary: List Device Messages
      operationId: listDeviceMessages
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of messages to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **muid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: muid
          in: query
          description: >-
            Last or First message uuid of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceMessage'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/message/count/{atoken}/{id}':
    post:
      tags:
        - Count All Messages
      summary: Count All Messages
      operationId: countAllMessages
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Message ID
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ml/upsert/{atoken}': 
    post: 
      tags:
        - Create Update Machine Learning Model
      summary: Create Update Machine Learning Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "upsertMLModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: MLModel JSON object
          required: true
          schema:
            $ref: '#/definitions/MLModel'
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ml/delete/{atoken}/{relation}': 
    delete: 
      tags:
        -  Delete Machine Learning Model
      summary: Delete Machine Learning Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "deleteMLModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: relation
          in: path
          description: MLModel name
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ml/get/{atoken}/{relation}': 
    get: 
      tags:
        -  Retreive Machine Learning Model
      summary: Retreive Machine Learning Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "retreiveMLModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: relation
          in: path
          description: MLModel name
          required: true
          type: string
      responses: 
        "200":
          description: "MLModel JSON Object"
          schema: 
            $ref: "#/definitions/MLModel"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ml/insert/{atoken}/{relation}': 
    post: 
      tags:
        -  Insert Taining Data
      summary: Insert Training Data
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "insertTrainingData"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: relation
          in: path
          description: MLModel name
          required: true
          type: string
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/MLData"
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ml/train/{atoken}/{relation}': 
    get: 
      tags:
        -  Train / Re-Train Machine Learning Model
      summary: Train / Re-Train Machine Learning Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "trainMLModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: relation
          in: path
          description: MLModel name
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ml/predict/{atoken}/{relation}': 
    post: 
      tags:
        -  Predict Class
      summary: Predict Class
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "predictClass"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: relation
          in: path
          description: MLModel name
          required: true
          type: string
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/MLData"
      responses: 
        "200":
          description: "Array of predicted lables"
          schema: 
            type: array
            items:
              type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ml/list/{atoken}/{pageSize}': 
    get: 
      tags:
        -  List Machine Learning Models
      summary: List Machine Learning Models
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "listMLModels"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Page size
          required: true
          type: integer
          format: int32
        - name: relation
          in: query
          description: Last MLModel relation name to perform next list operation
          required: false
          type: string
      responses: 
        "200":
          description: "MLModelList JSON Object"
          schema: 
            $ref: "#/definitions/MLModelList"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ml/list/data/{atoken}/{relation}/{pageSize}': 
    get: 
      tags:
        -  List ML Model Data
      summary: List ML Model Data
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "listMLModelData"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: relation
          in: path
          description: MLModel relation name
          required: true
          type: string
        - name: pageSize
          in: path
          description: Page size
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: List operation direction
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: lastId
          in: query
          description: lastId from MLDataList object
          required: false
          type: string
          format: uuid
      responses: 
        "200":
          description: "MLDataList JSON Object"
          schema: 
            $ref: "#/definitions/MLDataList"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ml/import/{atoken}/{format}':
    post:
      tags:
        - Import Machine Learning Model
      summary: Import Machine Learning Model
      operationId: importMLModel
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: format
          in: path
          description: Model File Format
          required: true
          type: string
          enum:
            - ARFF
        - name: modelfile
          in: formData
          description: Machine Learning Model File
          type: file
          required: true
      responses:
        "200":
          description: "MLModel JSON Object"
          schema: 
            $ref: "#/definitions/MLModel"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ml/export/{atoken}/{relation}/{format}':
    get:
      tags:
        - Export Machine Learning Model
      summary: Export Machine Learning Model
      operationId: exportMLModel
      consumes:
        - application/json
      produces:
        - multipart/form-data
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: relation
          in: path
          description: MLModel relation name
          required: true
          type: string
        - name: format
          in: path
          description: Model File Format
          required: true
          type: string
          enum:
            - ARFF
      responses:
        '200':
          description: Machine Learning Model File
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ml/download/{atoken}/{relation}':
    get:
      tags:
        - Download Trained Binary Model
      summary: Download Trained Binary Model
      operationId: downloadTrainedMLModel
      consumes:
        - application/json
      produces:
        - multipart/form-data
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: relation
          in: path
          description: MLModel relation name
          required: true
          type: string
      responses:
        '200':
          description: Trained Machine Learning Binary Model File
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mor/upsert/{atoken}': 
    post: 
      tags:
        - Create/Update Message Object Recognition
      summary: Create/Update Message Object Recognition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "upsertSettings"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: MessageORSetting JSON object
          required: true
          schema:
            $ref: '#/definitions/MessageORSetting'
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mor/get/{atoken}/{mid}/{field}': 
    get: 
      tags:
        - Get MessageORSetting
      summary: Get MessageORSetting
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "getSettings"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: mid
          in: path
          description: Message ID
          required: true
          type: integer
          format: int32
        - name: field
          in: path
          description: Message Field Name
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/MessageORSetting"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mor/count/{atoken}': 
    get: 
      tags:
        - Count MessageORSettings
      summary: Count MessageORSettings
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "countSettings"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mor/list/{atoken}':
    get:
      tags:
        - List MessageORSettings
      summary: List MessageORSettings
      operationId: listSettings
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/MessageORSetting'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mor/delete/{atoken}/{mid}/{field}':
    get: 
      tags:
        - Delete MessageORSettings
      summary: Delete MessageORSettings
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "deleteModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: mid
          in: path
          description: Message ID
          required: true
          type: integer
          format: int32
        - name: field
          in: path
          description: Message Field Name
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/emqtt/auth': 
    get: 
      tags:
        - EMQTT Authenticate
      summary: EMQTT Authenticate
      consumes:
        - text/plain
      produces: 
        - "application/json"
      operationId: "emqttAuthenticate"
      parameters:
        - name: clientid
          description: MQTT Client ID
          in: query
          required: true
          type: string
        - name: username
          description: MQTT User Name
          in: query
          required: true
          type: string
        - name: password
          description: MQTT Password
          in: query
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/emqtt/superuser': 
    get: 
      tags:
        - Is EMQTT Super User
      summary: Is EMQTT Super User
      consumes:
        - text/plain
      produces: 
        - "application/json"
      operationId: "isEMQTTSuperUser"
      parameters:
        - name: clientid
          description: MQTT Client ID
          in: query
          required: true
          type: string
        - name: username
          description: MQTT User Name
          in: query
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/emqtt/acl': 
    get: 
      tags:
        - Emqtt MQTT ACL
      summary: Emqtt MQTT ACL
      consumes:
        - text/plain
      produces: 
        - "application/json"
      operationId: "isEmqttMQTTAuthorized"
      parameters:
        - name: username
          description: MQTT User Name
          in: query
          required: true
          type: string
        - name: topic
          description: Requesting Topic
          in: query
          required: true
          type: string
        - name: clientid
          description: MQTT Client ID
          in: query
          required: true
          type: string
        - name: access
          description: 'sub = 1, pub = 2'
          in: query
          required: true
          type: integer
          format: int32
        - name: ipaddr
          in: query
          description: Requesting IP Address
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mosquitto/auth': 
    post: 
      tags:
        - Mosquitto MQTT Authenticate
      summary: Mosquitto MQTT Authenticate
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - "application/json"
      operationId: "mosquittoAuthenticate"
      parameters:
        - name: clientid
          in: formData
          description: MQTT Client ID
          required: true
          type: string
        - name: username
          in: formData
          description: MQTT User Name
          required: true
          type: string
        - name: password
          in: formData
          description: MQTT Password
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mosquitto/superuser': 
    post: 
      tags:
        - Is Mosquitto MQTT Super User
      summary: Is Mosquitto MQTT Super User
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - "application/json"
      operationId: "isMosquittoMQTTSuperUser"
      parameters:
        - name: clientid
          in: formData
          description: MQTT Client ID
          required: true
          type: string
        - name: username
          in: formData
          description: MQTT User Name
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mosquitto/acl': 
    post: 
      tags:
        - Mosquitto MQTT ACL
      summary: Mosquitto MQTT ACL
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - "application/json"
      operationId: "isMosquittoMQTTAuthorized"
      parameters:
        - name: username
          in: formData
          description: MQTT User Name
          required: true
          type: string
        - name: topic
          in: formData
          description: Requesting Topic
          required: true
          type: string
        - name: clientid
          in: formData
          description: MQTT Client ID
          required: false
          type: string
        - name: acc
          in: formData
          description: 'sub = 1, pub = 2'
          required: true
          type: integer
          format: int32
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/upsert/{atoken}':
    post:
      tags:
        - Create / Update Message Definition
      summary: Create / Update Message Definition
      operationId: upsertMessageDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: MessageSpecification JSON object
          required: true
          schema:
            $ref: '#/definitions/MessageSpecification'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/get/{atoken}/{messageId}':
    get:
      tags:
        - Retreive Message Definition
      summary: Retreive Message Definition
      operationId: getMessageDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: messageId
          in: path
          description: Message id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/MessageSpecification'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/delete/{atoken}/{messageId}':
    delete:
      tags:
        - Delete Message Definition
      summary: Delete Message Definition
      operationId: deleteMessageDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: messageId
          in: path
          description: Message Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Message Definitions
      summary: List Message Definition
      operationId: listMessageDefinitions
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of message definitions to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: If direction is specified, **mid** is required
          required: false
          type: string
          enum: [NEXT, PREV]
        - name: mid
          in: query
          description: Last or First message id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/MessageSpecification'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/count/{atoken}':
    post:
      tags:
        - Count All Message Specifications
      summary: Count All Message Specifications
      operationId: countAllMessageSpecs
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/upsert/{atoken}':
    post:
      tags:
        - Create / Update Named Rule
      summary: Create / Update Named Rule
      operationId: upsertNamedRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: NamedRule JSON object
          required: true
          schema:
            $ref: '#/definitions/NamedRule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/get/{atoken}/{name}':
    get:
      tags:
        - Retreive Named Rule
      summary: Retreive Named Rule
      operationId: getNamedRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Named rule name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/NamedRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/delete/{atoken}/{name}':
    delete:
      tags:
        - Delete Named Rule
      summary: Delete Named Rule
      operationId: deleteNamedRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Named rule name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/listnames/{atoken}/{pageSize}':
    get:
      tags:
        - List Rule Names
      summary: List Rule Names
      operationId: listRuleNames
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of names to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First rule name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Named Rules
      summary: List Named Rules
      operationId: listNamedRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of rules to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First rule name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/NamedRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/count/{atoken}':
    post:
      tags:
        - Count All Named Rules
      summary: Count All Named Rules
      operationId: countAllNamedRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/compile/{atoken}':
    post:
      tags:
        - Compile a Named Rule
      summary: Compile a Named Rule
      operationId: compileNamedRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: Rule JSON object
          required: true
          schema:
            $ref: '#/definitions/Rule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/create/{atoken}/{model}': 
    get: 
      tags:
        - Create OpenCV OR Model
      summary: Create OpenCV OR Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "createOpenCVORModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: description
          in: query
          description: Description of the model
          required: false
          type: string
        - name: ispublic
          in: query
          description: true if its a public model (needs admin access)
          required: false
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/updatedesc/{atoken}/{model}': 
    get: 
      tags:
        - Update OpenCV OR Model Description
      summary: Update OpenCV OR Model Description
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "updateOpenCVORModelDesc"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: query
          description: true if its a public model (needs admin access)
          required: false
          type: boolean
        - name: description
          in: query
          description: Description of the model
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/get/{atoken}/{model}': 
    get: 
      tags:
        - Get OpenCV OR Model
      summary: Get OpenCV OR Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "getOpenCVORModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: query
          description: true if its a public model (needs admin access)
          required: true
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/OpenCVModel"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/count/{atoken}': 
    get: 
      tags:
        - Count OpnCV OR Models
      summary: Count OpnCV OR Models
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "countOpenCVORModels"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: query
          description: true to count public models
          required: false
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/OpenCVModelCount"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/list/{atoken}/{pageSize}':
    get:
      tags:
        - List OpnCV OR Models
      summary: List OpnCV OR Models
      operationId: listOpenCVORModels
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of models to be listed
          required: true
          type: integer
          format: int32
        - name: ispublic
          in: query
          description: true to list public models
          required: false
          type: boolean
        - name: direction
          in: query
          description: >-
            If direction is specified, **aid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: model
          in: query
          description: >-
            Last or First model name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OpenCVModel'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/delete/{atoken}/{model}':
    get: 
      tags:
        - Delete OpenCV OR Model
      summary: Delete OpenCV OR Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "deleteOpenCVORModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: query
          description: true if its a public model (needs admin access)
          required: false
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/cascade/upsert/{atoken}/{model}/{ispublic}': 
    post: 
      tags:
        - Create Update OpenCV OR Model Cascade
      summary: Create Update OpenCV OR Model Cascade
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "upsertOpenCVORModelCascade"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: path
          description: true if its a public model (needs admin access)
          required: true
          type: boolean
        - name: entity
          in: body
          description: OpenCVModelCascade JSON object
          required: true
          schema:
            $ref: '#/definitions/OpenCVModelCascade'
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/cascade/get/{atoken}/{model}/{label}': 
    get: 
      tags:
        - Get OpenCV OR Model Cascade
      summary: Get OpenCV OR Model Cascade
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "getOpenCVORModelCascade"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: label
          in: path
          description: Cascade label Name
          required: true
          type: string
        - name: ispublic
          in: query
          description: true if its a public model (needs admin access)
          required: false
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/OpenCVModelCascade"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/cascade/count/{atoken}/{model}': 
    get: 
      tags:
        - Count OpnCV OR Model Cascades
      summary: Count OpnCV OR Model Cascades
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "countOpenCVORModelCascades"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: query
          description: true to count public model cascades
          required: false
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/cascade/list/{atoken}/{model}/{pageSize}':
    get:
      tags:
        - List OpnCV OR Model Cascades
      summary: List OpnCV OR Model Cascades
      operationId: listOpenCVORModelCascades
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of models to be listed
          required: true
          type: integer
          format: int32
        - name: ispublic
          in: query
          description: true to list public models
          required: false
          type: boolean
        - name: direction
          in: query
          description: >-
            If direction is specified, **aid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: label
          in: query
          description: >-
            Last or First cascade label name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OpenCVModelCascade'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/cascade/delete/{atoken}/{model}/{label}':
    get: 
      tags:
        - Delete OpenCV OR Model Cascade
      summary: Delete OpenCV OR Model Cascade
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "deleteOpenCVORModelCascade"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: label
          in: path
          description: Cascade label Name
          required: true
          type: string
        - name: ispublic
          in: query
          description: true if its a public model (needs admin access)
          required: false
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/cascade/file/upload/{atoken}/{model}/{label}/{ispublic}':
    post:
      tags:
        - Upload OpenCV OR Model Haarcascade File
      summary: Upload OpenCV OR Model Haarcascade File
      operationId: uploadOpenCVORModelCascadeFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: label
          in: path
          description: Cascade label Name
          required: true
          type: string
        - name: ispublic
          in: path
          description: true if its a public model (needs admin access)
          required: true
          type: boolean
        - name: haarfile
          in: formData
          description: OpenCV Haarcascade xml file
          type: file
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencv/or/cascade/file/download/{atoken}/{model}/{label}':
    get:
      tags:
        - Download OpenCV OR Model Haarcascade File
      summary: Download OpenCV OR Model Haarcascade File
      operationId: downloadOpenCVORModelCascadeFile
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: label
          in: path
          description: Cascade label Name
          required: true
          type: string
        - name: ispublic
          in: query
          description: true if its a public model (needs admin access)
          required: false
          type: boolean
      responses:
        '200':
          description: OpenCV Haarcascade xml file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencvor/predict/msg/{atoken}/{model}/{ispublic}/{msgid}/{field}': 
    get: 
      tags:
        - Predict Message Image Object using OpenCV
      summary: Predict Message Image Object using OpenCV
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "predictOpenCVMessageImage"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: path
          description: true if its a public model
          required: true
          type: boolean
        - name: msgid
          in: path
          description: Message UUID
          required: true
          type: string
        - name: field
          in: path
          description: Message binary field name
          required: true
          type: string
        - name: overlay
          in: query
          description: true to get back the overlayed image as BASE64 content ** OpenCVPredictResult.image **
          required: false
          type: boolean
      responses: 
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OpenCVPredictResult'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencvor/predict/msg/overlay/{atoken}/{model}/{ispublic}/{msgid}/{field}': 
    get: 
      tags:
        - Predict Message Image Object using OpenCV and return Overlay
      summary: Predict Message Image Object using OpenCV and return Overlay
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "predictOpenCVMessageImageAndOverlay"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: path
          description: true if its a public model
          required: true
          type: boolean
        - name: msgid
          in: path
          description: Message UUID
          required: true
          type: string
        - name: field
          in: path
          description: Message binary field name
          required: true
          type: string
      responses: 
        '200':
          description: Image file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencvor/predict/image/{atoken}/{model}/{ispublic}/{overlay}': 
    post: 
      tags:
        - Predict Uploaded Image Object using OpenCV
      summary: Predict Uploaded Image Object using OpenCV
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      operationId: "predictOpenCVUploadedImage"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: path
          description: true if its a public model
          required: true
          type: boolean
        - name: overlay
          in: path
          description: true to get back the overlayed image as BASE64 content ** OpenCVPredictResult.image **
          required: true
          type: boolean
        - name: imagefile
          in: formData
          description: Image file jpg/png/bmp etc
          type: file
          required: true
      responses: 
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OpenCVPredictResult'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/opencvor/predict/image/overlay/{atoken}/{model}/{ispublic}': 
    post: 
      tags:
        - Predict Uploaded Image Object using OpenCV and return Overlay
      summary: Predict Uploaded Image Object using OpenCV and return Overlay
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      operationId: "predictOpenCVUploadedImageAndOverlay"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: path
          description: true if its a public model
          required: true
          type: boolean
        - name: imagefile
          in: formData
          description: Image file jpg/png/bmp etc
          type: file
          required: true
      responses: 
        '200':
          description: Image file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ota/recent/get/{dkey}/{akey}/{dmdl}':
    get:
      tags:
        - Get Recent Firmware Info
      summary: Get Recent Firmware Info
      operationId: getRecentFirmwareInfo
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: dkey
          in: path
          description: domainKey to which the firmware belongs
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device Model ID
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: "#/definitions/FirmwareInfo"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ota/update/download/{dkey}/{akey}/{dmdl}/{fwver}':
    get:
      tags:
        - Download Firmware
      summary: Download Firmware
      operationId: downloadFirmware
      consumes:
        - "text/plain"
      produces:
        - "application/octect-stream"
      parameters:
        - name: dkey
          in: path
          description: domainKey to which the firmware belongs
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: fwver
          in: path
          description: Firmware Version
          required: true
          type: string
      responses:
        '200':
          description: Firmware binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ota/batch/download/{dkey}/{akey}/{did}/{id}':
    get:
      tags:
        - Download Batched Firmware
      summary: Download Batched Firmware
      operationId: downloadBatchedFirmware
      consumes:
        - "text/plain"
      produces:
        - "application/octect-stream"
      parameters:
        - name: dkey
          in: path
          description: domainKey to which the firmware belongs
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device id
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch ID
          required: true
          type: string
      responses:
        '200':
          description: Firmware binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/create/{atoken}/{name}/{tmodel}/{tver}': 
    get: 
      tags:
        - Create Device OTA Batch
      summary: Create Device OTA Batch
      operationId: "createDeviceOTABatch"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Batch Name
          required: true
          type: string
        - name: tmodel
          in: path
          description: To Device Model ID
          required: true
          type: string
        - name: tver
          in: path
          description: To Device Model Version
          required: true
          type: string
        - name: expireAt
          in: query
          description: Expire after date
          required: false
          type: string
          format: date
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/OTADeviceBatch"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/get/{atoken}/{id}':
    get:
      tags:
        - Retreive Device OTA Batch 
      summary: Retreive Device OTA Batch
      operationId: getDeviceOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OTADeviceBatch'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Device OTA Batches
      summary: List Device OTA Batches
      operationId: listDeviceOTABatches
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of batches to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **id** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: id
          in: query
          description: >-
            Last or First batch ota id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTADeviceBatch'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/start/{atoken}/{id}':
    get:
      tags:
        - Start Device OTA Batch 
      summary: Start Device OTA Batch
      operationId: startDeviceOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/count/{atoken}/{id}':
    post:
      tags:
        - Count All Device OTA Batches
      summary: Count All Device OTA Batches
      operationId: countAllDeviceOTABatches
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/delete/{atoken}/{id}':
    delete:
      tags:
        - Delete Device OTA Batch 
      summary: Delete Device OTA Batch
      operationId: deleteDeviceOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/member/add/{atoken}/{id}/{did}':
    delete:
      tags:
        - Add Device OTA Batch Member
      summary: Add Device OTA Batch Member
      operationId: addDeviceOTABatchMember
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
        - name: did
          in: path
          description: Device id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/member/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Device OTA Batch Members
      summary: List Device OTA Batch Members
      operationId: listDeviceOTABatchMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of members to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTADeviceBatchMember'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/member/delete/{atoken}/{id}/{did}':
    delete:
      tags:
        - Delete Device OTA Batch Member
      summary: Delete Device OTA Batch Member
      operationId: deleteDeviceOTABatchMember
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
        - name: did
          in: path
          description: Device id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/member/count/{atoken}/{id}':
    post:
      tags:
        - Count All Device OTA Batch Members
      summary: Count All Device OTA Batch Members
      operationId: countAllDeviceOTABatchMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/create/{atoken}/{name}/{fmodel}/{fver}/{tmodel}/{tver}': 
    get: 
      tags:
        - Create Model OTA Batch
      summary: Create Model OTA Batch
      operationId: "createModelOTABatch"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Batch Name
          required: true
          type: string
        - name: fmodel
          in: path
          description: From Model ID
          required: true
          type: string
        - name: fver
          in: path
          description: From Model Version
          required: true
          type: string
        - name: tmodel
          in: path
          description: To Model ID
          required: true
          type: string
        - name: tver
          in: path
          description: To Model Version
          required: true
          type: string
        - name: expireAt
          in: query
          description: Expire after date
          required: false
          type: string
          format: date
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/OTAModelBatch"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/get/{atoken}/{id}':
    get:
      tags:
        - Retreive Model OTA Batch 
      summary: Retreive Model OTA Batch
      operationId: getModelOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OTAModelBatch'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Model OTA Batches
      summary: List Model OTA Batches
      operationId: listModelOTABatches
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of batches to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **id** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: id
          in: query
          description: >-
            Last or First batch ota id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTAModelBatch'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/member/list/{atoken}/{id}/{pageSize}':
    get:
      tags:
        - List Model OTA Batch Members
      summary: List Model OTA Batch Members
      operationId: listModelOTABatchMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Batch ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of members to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTAModelBatchMember'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/start/{atoken}/{id}':
    get:
      tags:
        - Start Model OTA Batch 
      summary: Start Model OTA Batch
      operationId: startModelOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/delete/{atoken}/{id}':
    delete:
      tags:
        - Delete Model OTA Batch 
      summary: Delete Model OTA Batch
      operationId: deleteModelOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/member/delete/{atoken}/{id}/{did}':
    delete:
      tags:
        - Delete Model OTA Batch Member
      summary: Delete Model OTA Batch Member
      operationId: deleteModelOTABatchMember
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ping/{atoken}': 
    get: 
      tags:
        - Ping API endpoint
      summary: Ping API endpoint
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "ping"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/push/message':
    post:
      tags:
        - Push New Message
      summary: Push New Message
      operationId: pushMessage
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: entity
          in: body
          description: Message JSON object
          required: true
          schema:
            $ref: '#/definitions/PushMessage'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PushResult'
  '/push/raw/{dkey}/{akey}/{did}/{dmdl}/{fwver}/{mid}':
    post:
      tags:
        - Push Raw Message
      summary: Push Raw Message
      operationId: pushRawMessage
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: dkey
          in: path
          description: Domain key
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: mid
          in: path
          description: Message ID (defined through message spec)
          required: true
          type: integer
          format: int32
        - name: type
          in: query
          description: data type
          required: false
          type: string
          enum:
            - JSON
            - TEXT
            - HEX
            - BASE64
        - name: data
          in: body
          description: Command text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PushResult'
  '/reocrd/insert/static/{atoken}/{rid}/{rkey}':
    post:
      tags:
        - Insert/Update Record With ID
      summary: Insert/Update Record With ID
      operationId: upsertRecordWithID
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Well defined unique record ID
          required: true
          type: integer
          format: int32
        - name: rkey
          in: path
          description: Record's unique identifier
          required: true
          type: string
        - name: data
          in: body
          description: Stringified record JSON object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/InsertResult'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/reocrd/insert/dynamic/{atoken}/{rid}':
    post:
      tags:
        - Insert/Update Record
      summary: Insert/Update Record
      operationId: upsertRecord
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Well defined unique record ID
          required: true
          type: integer
          format: int32
        - name: data
          in: body
          description: Stringified record JSON object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/InsertResult'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/reocrd/delete/{atoken}/{rid}/{rkey}':
    delete:
      tags:
        - Delete Record
      summary: Delete Record
      operationId: deleteRecord
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Well defined unique record ID
          required: true
          type: integer
          format: int32
        - name: rkey
          in: path
          description: Record's unique identifier
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/rules/upsert/{atoken}':
    post:
      tags:
        - Create / Update Message Rule
      summary: Create / Update Message Rule
      operationId: upsertMessageRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: MessageRule JSON object
          required: true
          schema:
            $ref: '#/definitions/MessageRule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/rules/get/{atoken}/{mid}':
    get:
      tags:
        - Retreive Message Rule
      summary: Retreive Message Rule
      operationId: getMessageRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: mid
          in: path
          description: Message id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/MessageRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/rules/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Message Rules
      summary: List Message Rules
      operationId: listMessageRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of rules to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **mid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: mid
          in: query
          description: >-
            Last or First message id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/MessageRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/rules/delete/{atoken}/{mid}':
    delete:
      tags:
        - Delete a Message Rule
      summary: Delete a Message Rule
      operationId: deleteMessageRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: mid
          in: path
          description: Message id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/rules/compile/{atoken}':
    post:
      tags:
        - Compile a Message Rule
      summary: Compile a Message Rule
      operationId: compileMessageRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: Rule JSON object
          required: true
          schema:
            $ref: '#/definitions/Rule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/script/execute/{atoken}':
    post:
      tags:
        - Execute boodskap console script
      summary: Execute boodskap console script
      operationId: executeScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: script
          in: body
          description: Script JSON
          required: true
          schema:
            $ref: "#/definitions/Script"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/ScriptResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/search/query/{atoken}/{type}/':
    post:
      tags:
        - Search
      summary: Search
      operationId: search
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          required: true
          type: string
          enum:
            - 'MESSAGE'
            - 'COMMAND'
            - 'RECORD'
            - 'SMS'
            - 'EMAIL'
            - 'EVENT'
            - 'DB'
            - 'GEOFENCE'
            - 'LOCATION'
            - 'GLOBAL'
        - name: id
          in: query
          required: false
          type: integer
          format: int32
          description: 'Required if **type** is one of **[ message | command | record ]**'
        - name: repositary
          in: query
          required: false
          type: string
          description: 'Required if **type** is one of **GLOBAL**'
        - name: mapping
          in: query
          required: false
          type: string
          description: 'Required if **type** is one of **GLOBAL**'
        - name: query
          in: body
          description: SearchQuery JSON
          required: true
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/search/template/{atoken}/{type}/':
    post:
      tags:
        - Search by Template
      summary: Search by Template
      operationId: searchByTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          required: true
          type: string
          enum:
            - 'MESSAGE'
            - 'COMMAND'
            - 'RECORD'
            - 'SMS'
            - 'EMAIL'
            - 'EVENT'
            - 'DB'
            - 'GEOFENCE'
            - 'LOCATION'
            - 'GLOBAL'
        - name: id
          in: query
          required: false
          type: integer
          format: int32
          description: 'Required if **type** is one of **[ message | command | record ]**'
        - name: repositary
          in: query
          required: false
          type: string
          description: 'Required if **type** is one of **GLOBAL**'
        - name: mapping
          in: query
          required: false
          type: string
          description: 'Required if **type** is one of **GLOBAL**'
        - name: query
          in: body
          description: TemplateQuery JSON
          required: true
          schema:
            $ref: '#/definitions/TemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/settings/set/email/{atoken}':
    post:
      tags:
        - Create / Update Email Gateway
      summary: Create / Update Email Gateway
      operationId: upsertEmailGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: EmailGateway JSON object
          required: true
          schema:
            $ref: '#/definitions/EmailGateway'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/get/email/{atoken}':
    get:
      tags:
        - Get Email Gateway
      summary: Get Email Gateway
      operationId: getEmailGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: '#/definitions/EmailGateway'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/set/twilio/{atoken}':
    post:
      tags:
        - Create / Update Twilio Gateway
      summary: Create / Update Twilio Gateway
      operationId: upsertTwilioGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: TwilioGateway JSON object
          required: true
          schema:
            $ref: '#/definitions/TwilioGateway'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/get/twilio/{atoken}':
    get:
      tags:
        - Get Twilio Gateway
      summary: Get Twilio Gateway
      operationId: getTwilioGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: '#/definitions/TwilioGateway'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/set/fcm/{atoken}':
    post:
      tags:
        - Create / Update FCM Gateway
      summary: Create / Update FCM Gateway
      operationId: upsertFCMGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: FCMGateway JSON object
          required: true
          schema:
            $ref: '#/definitions/FCMGateway'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/get/fcm/{atoken}':
    get:
      tags:
        - Get FCM Gateway
      summary: Get FCM Gateway
      operationId: getFCMGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: '#/definitions/FCMGateway'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/set/udp/{atoken}':
    post:
      tags:
        - Create / Update UDP Gateway
      summary: Create / Update UDP Gateway
      operationId: upsertUDPGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UDPGateway JSON object
          required: true
          schema:
            $ref: '#/definitions/UDPGateway'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/get/udp/{atoken}':
    get:
      tags:
        - Get UDP Gateway
      summary: Get UDP Gateway
      operationId: getUDPGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: '#/definitions/UDPGateway'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/upsert/{atoken}':
    post:
      tags:
        - Create / Update Scheduled Rule
      summary: Create / Update Scheduled Rule
      operationId: upsertScheduledRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: ScheduledRule JSON object
          required: true
          schema:
            $ref: '#/definitions/ScheduledRule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/get/{atoken}/{id}':
    get:
      tags:
        - Retreive Scheduled Rule
      summary: Retreive Scheduled Rule
      operationId: getScheduledRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Scheduled rule id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ScheduledRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/delete/{atoken}/{id}':
    delete:
      tags:
        - Delete a Scheduled Rule
      summary: Delete a Scheduled Rule
      operationId: deleteScheduledRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Scheduled rule id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/listids/{atoken}/{pageSize}':
    get:
      tags:
        - List Scheduled Rule IDs
      summary: List Scheduled Rule IDs
      operationId: listScheduledRuleIDs
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of names to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **id** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: id
          in: query
          description: >-
            Last or First rule id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              type: integer
              format: int32
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Scheduled Rules
      summary: List Scheduled Rules
      operationId: listScheduledRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of rules to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **id** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: id
          in: query
          description: >-
            Last or First rule id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ScheduledRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/count/{atoken}':
    post:
      tags:
        - Count All Scheduled Rules
      summary: Count All Scheduled Rules
      operationId: countAllScheduledRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/compile/{atoken}':
    post:
      tags:
        - Compile a  Scheduled Rule
      summary: Compile a Scheduled Rule
      operationId: compileScheduledRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: Rule JSON object
          required: true
          schema:
            $ref: '#/definitions/Rule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/spec/upsert/{atoken}':
    post:
      tags:
        - Create / Update Record Definition
      summary: Create / Update Record Definition
      operationId: upsertRecordDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: RecordDefinition JSON object
          required: true
          schema:
            $ref: '#/definitions/RecordDefinition'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/spec/get/{atoken}/{rid}':
    get:
      tags:
        - Retreive Record Definition
      summary: Retreive Record Definition
      operationId: getRecordDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Record id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RecordDefinition'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/spec/delete/{atoken}/{rid}':
    delete:
      tags:
        - Delete Record Definition
      summary: Delete Record Definition
      operationId: deleteRecordDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Record Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/spec/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Record Definitions
      summary: List Record Definitions
      operationId: listRecordDefinitions
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of record definitions to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **rid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: rid
          in: query
          description: >-
            Last or First record id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/RecordDefinition'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/spec/count/{atoken}':
    post:
      tags:
        - Count All Record Specifications
      summary: Count All Record Specifications
      operationId: countAllRecordSpecs
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/upload/{atoken}':
    post:
      tags:
        - Upload Template File
      summary: Upload Template File
      operationId: uploadTemplateFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: True if system template
          required: false
          type: boolean
        - name: jsonfile
          in: formData
          description: JSON Template list file
          type: file
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/download/{atoken}':
    get:
      tags:
        - Download Template File
      summary: Download Template File
      operationId: downloadTemplateFile
      consumes:
        - "text/plain"
      produces:
        - "application/octect-stream"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: True if system template
          required: false
          type: boolean
      responses:
        '200':
          description: JSON Template list file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/upsert/{atoken}':
    post:
      tags:
        - Create / Update Template
      summary: Create / Update Template
      operationId: upsertTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: 'true for system template'
          required: false
          type: boolean
        - name: entity
          in: body
          description: Template JSON object
          required: true
          schema:
            $ref: '#/definitions/Template'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/get/{atoken}/{name}':
    get:
      tags:
        - Retreive Template
      summary: Retreive Template
      operationId: getTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: 'true for system template'
          required: false
          type: boolean
        - name: name
          in: path
          description: Template Name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Template'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Templates
      summary: List Templates
      operationId: listTemplates
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of templates to be listed
          required: true
          type: integer
          format: int32
        - name: system
          in: query
          description: 'true for system template'
          required: false
          type: boolean
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First template name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Template'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/delete/{atoken}/{name}':
    delete:
      tags:
        - Delete a Template
      summary: Delete a Template
      operationId: deleteTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: 'true for system template'
          required: false
          type: boolean
        - name: name
          in: path
          description: Template Name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/merge/{atoken}/{name}':
    post:
      tags:
        - Merge a Template
      summary: Merge a Template
      operationId: mergeTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: 'true for system template'
          required: false
          type: boolean
        - name: name
          in: path
          description: Template Name
          required: true
          type: string
        - name: mergeContent
          in: body
          description: Merge Content JSON object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema: 
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/tensorflow/or/upsert/{atoken}/{ispublic}': 
    post: 
      tags:
        - Create/Update TensorFlow OR Model
      summary: Create/Update TensorFlow OR Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "upsertTFModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: path
          description: true if its a public model (needs admin access)
          required: true
          type: boolean
        - name: entity
          in: body
          description: TensorFlowModel JSON object
          required: true
          schema:
            $ref: '#/definitions/TensorFlowModel'
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/tensorflow/or/get/{atoken}/{model}': 
    get: 
      tags:
        - Get TensorFlow OR Model
      summary: Get TensorFlow OR Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "getTFModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: query
          description: true if its a public model (needs admin access)
          required: true
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/TensorFlowModel"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/tensorflow/or/count/{atoken}': 
    get: 
      tags:
        - Count TensorFlow OR Models
      summary: Count TensorFlow OR Models
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "countTFModels"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: query
          description: true to count public models
          required: false
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/tensorflow/or/list/{atoken}/{pageSize}':
    get:
      tags:
        - List TensorFlow OR Models
      summary: List TensorFlow OR Models
      operationId: listTFModels
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of models to be listed
          required: true
          type: integer
          format: int32
        - name: ispublic
          in: query
          description: true to list public models
          required: false
          type: boolean
        - name: direction
          in: query
          description: >-
            If direction is specified, **model** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: model
          in: query
          description: >-
            Last or First model name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TensorFlowModel'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/tensorflow/or/delete/{atoken}/{model}':
    get: 
      tags:
        - Delete TensorFlow OR Model
      summary: Delete TensorFlow OR Model
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "deleteTFModel"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: query
          description: true if its a public model (needs admin access)
          required: false
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/tensorflow/or/file/upload/{atoken}/{model}/{type}/{ispublic}':
    post:
      tags:
        - Upload TensorFlow OR Model Graph/Label File
      summary: Upload TensorFlow OR Model Graph/Label File
      operationId: uploadTFModelFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: type
          in: path
          description: File type
          required: true
          type: string
          enum:
            - GRAPH
            - LABELS
        - name: ispublic
          in: path
          description: true if its a public model (needs admin access)
          required: true
          type: boolean
        - name: binfile
          in: formData
          description: Graph/Label file
          type: file
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/tensorflow/or/file/download/{atoken}/{model}/{type}':
    get:
      tags:
        - Download TensorFlow OR Model Graph/Label File
      summary: Download TensorFlow OR Model Graph/Label File
      operationId: downloadTFModelFile
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: type
          in: path
          description: File type
          required: true
          type: string
          enum:
            - GRAPH
            - LABELS
        - name: ispublic
          in: query
          description: true if its a public model (needs admin access)
          required: false
          type: boolean
      responses:
        '200':
          description: Graph/Label file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/tensorflowor/predict/msg/{atoken}/{model}/{ispublic}/{msgid}/{field}': 
    get: 
      tags:
        - Predict Message Image Object using TensorFlow
      summary: Predict Message Image Object using TensorFlow
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "predictMessageImage"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: path
          description: true if its a public model
          required: true
          type: boolean
        - name: msgid
          in: path
          description: Message UUID
          required: true
          type: string
        - name: field
          in: path
          description: Message binary field name
          required: true
          type: string
        - name: overlay
          in: query
          description: true to get back the overlayed image as BASE64 content ** TensorFlowPredictResult.image **
          required: false
          type: boolean
      responses: 
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TensorFlowPredictResult'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/tensorflowor/predict/msg/overlay/{atoken}/{model}/{ispublic}/{msgid}/{field}': 
    get: 
      tags:
        - Predict Message Image Object using TensorFlow and return Overlay
      summary: Predict Message Image Object using TensorFlow and return Overlay
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "predictMessageImageAndOverlay"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: path
          description: true if its a public model
          required: true
          type: boolean
        - name: msgid
          in: path
          description: Message UUID
          required: true
          type: string
        - name: field
          in: path
          description: Message binary field name
          required: true
          type: string
      responses: 
        '200':
          description: Image file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/tensorflowor/predict/image/{atoken}/{model}/{ispublic}/{overlay}': 
    post: 
      tags:
        - Predict Uploaded Image Object using TensorFlow
      summary: Predict Uploaded Image Object using TensorFlow
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      operationId: "predictUploadedImage"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: path
          description: true if its a public model
          required: true
          type: boolean
        - name: overlay
          in: path
          description: true to get back the overlayed image as BASE64 content ** TensorFlowPredictResult.image **
          required: true
          type: boolean
        - name: imagefile
          in: formData
          description: Image file jpg/png/bmp etc
          type: file
          required: true
      responses: 
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TensorFlowPredictResult'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/tensorflowor/predict/image/overlay/{atoken}/{model}/{ispublic}': 
    post: 
      tags:
        - Predict Uploaded Image Object using TensorFlow and return Overlay
      summary: Predict Uploaded Image Object using TensorFlow and return Overlay
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      operationId: "predictUploadedImageAndOverlay"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: model
          in: path
          description: Model Name
          required: true
          type: string
        - name: ispublic
          in: path
          description: true if its a public model
          required: true
          type: boolean
        - name: imagefile
          in: formData
          description: Image file jpg/png/bmp etc
          type: file
          required: true
      responses: 
        '200':
          description: Image file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/upsert/{atoken}': 
    post: 
      tags:
        - Create / Update User
      summary: Create or update user
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "upsertUser"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: user
          in: body
          description: User object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/changepass/{atoken}/{email}/{pswd}':
    post:
      tags:
        - Change User Password
      summary: Change password of an user
      operationId: changeUserPassword
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: "Auth token of the logged in user"
          required: true
          type: string
        - name: email
          in: path
          description: "Email/Username of the user"
          required: true
          type: string
        - name: pswd
          in: path
          description: "New password of the user"
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/changemypass/{atoken}/{pswd}':
    post:
      tags:
        - Change logged in User Password
      summary: Change password of logged in user
      operationId: changeMyPassword
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: "Auth token of the logged in user"
          required: true
          type: string
        - name: pswd
          in: path
          description: "New password of the user"
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/get/{atoken}/{email}':
    get:
      tags:
        - Retreive User
      summary: Retreive User
      operationId: getUser
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: email
          in: path
          description: Email/Username of the user
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: '#/definitions/User'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/list/{atoken}/{pageSize}':
    get:
      tags:
        - List Users
      summary: List Users
      operationId: listUsers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of users to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **email** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: email
          in: query
          description: >-
            Last or First email of the previous list operation, **required** if   **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/delete/{atoken}/{email}':
    delete:
      tags:
        - Delete User
      summary: Delete User
      operationId: deleteUser
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: email
          in: path
          description: Email/Username of the user
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update User Property
      summary: Create / Update User Property
      operationId: storeUserProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UserProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/UserProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/property/get/{atoken}/{ouid}/{name}':
    get:
      tags:
        - Retreive User Property
      summary: Retreive User Property
      operationId: getUserProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/property/delete/{atoken}/{ouid}/{name}':
    delete:
      tags:
        - Delete Stored User Property
      summary: Delete Stored User Property
      operationId: deleteUserProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/property/list/{atoken}/{ouid}/{pageSize}':
    get:
      tags:
        - List User Properties
      summary: List User Properties
      operationId: listUserProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/upsert/{atoken}':
    post:
      tags:
        - Create / Update User Group
      summary: Create / Update User Group
      operationId: upsertUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UserGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/UserGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/get/{atoken}/{ouid}/{gid}':
    get:
      tags:
        - Retreive User Group
      summary: Retreive User Group
      operationId: getUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/add/{atoken}/{ouid}/{gid}':
    post:
      tags:
        - Add Members(s) to User Group
      summary: Add Members(s) to User Group
      operationId: addMembersToUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: userIds
          in: body
          description: Array of user IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/remove/{atoken}/{ouid}/{gid}':
    post:
      tags:
        - Remove Members(s) from User Group
      summary: Remove Members(s) from User Group
      operationId: removeMembersFromUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
        - name: userIds
          in: body
          description: Array of user IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/delete/{atoken}/{ouid}/{gid}':
    delete:
      tags:
        - Delete User Group
      summary: Delete User Group
      operationId: deleteUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/list/{atoken}/{ouid}/{pageSize}':
    get:
      tags:
        - List User Groups
      summary: List User Groups
      operationId: listUserGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/listmembers/{atoken}/{ouid}/{gid}/{pageSize}':
    get:
      tags:
        - List User Group Members
      summary: List User Group Members
      operationId: listUserGroupMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the devices from
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **uid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: uid
          in: query
          description: >-
            Last or First user id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/property/upsert/{atoken}':
    post:
      tags:
        - Create / Update User Group Property
      summary: Create / Update User Group Property
      operationId: storeUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UserGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/UserGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/property/get/{atoken}/{ouid}/{gid}/{name}':
    get:
      tags:
        - Retreive UserGroupProperty
      summary: Retreive UserGroupProperty
      operationId: getUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: User Group ID
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/property/delete/{atoken}/{ouid}/{gid}/{name}':
    delete:
      tags:
        - Delete Stored UserGroupProperty
      summary: Delete Stored UserGroupProperty
      operationId: deleteUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: User Group ID
          required: true
          type: integer
          format: int32
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/property/list/{atoken}/{ouid}/{gid}/{pageSize}':
    get:
      tags:
        - List User Group Properties
      summary: List User Group Properties
      operationId: listUserGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/count/{atoken}':
    post:
      tags:
        - Count All Users
      summary: Count All Users
      operationId: countAllUsers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/count/{atoken}/{userId}':
    post:
      tags:
        - Count All User Groups
      summary: Count All User Groups
      operationId: countAllUserGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: userId
          in: path
          description: User ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
definitions: 
  User:
    required:
      - email
    properties:
      email:
        type: string
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      country:
        type: string
      state:
        type: string
      city:
        type: string
      address:
        type: string
      zipcode:
        type: string
      primaryPhone:
        type: string
      locale:
        type: string
      timezone:
        type: string
      workStart:
        type: integer
        format: int16
      workEnd:
        type: integer
        format: int16
      workDays:
        type: array
        items:
          type: integer
          format: int16
      roles:
        type: array
        items:
          type: string
      groups:
        type: array
        items:
          type: integer
          format: int32
      registeredStamp:
        type: integer
        format: int64
  Domain:
    required:
      - email
    properties:
      email:
        type: string
      country:
        type: string
      state:
        type: string
      city:
        type: string
      address:
        type: string
      zipcode:
        type: string
      primaryPhone:
        type: string
      locale:
        type: string
      timezone:
        type: string
      registeredStamp:
        type: integer
        format: int64
  LinkedDomain:
    required:
    - 'domainKey'
    - 'apiKey'
    - 'token'
    - 'label'
    properties:
      domainKey:
        type: string
      apiKey:
        type: string
      token:
        type: string
      label:
        type: string
  UserDomain:
    required:
      - user
      - domain
      - token
      - domainKey
      - apiKey
    properties:
      user:
        $ref: "#/definitions/User"
      domain:
        $ref: "#/definitions/Domain"
      token:
        type: string
      domainKey:
        type: string
      apiKey:
        type: string
      label:
        type: string
      linkedDomains:
        type: array
        items:
          $ref: "#/definitions/LinkedDomain"
  ApiError: 
    type: "object"
    required: 
      - "code"
    properties: 
      code: 
        type: "string"
      message: 
        type: "string"
  Success: 
    type: "object"
    required:
      - code
    properties: 
      code: 
        type: "string"
      message: 
        type: "string"
  UserGroup:
    type: object
    required:
      - userId
      - id
      - name
    properties:
      userId:
        type: string
      id:
        type: integer
        format: int32
      name:
        type: string
  AssetGroup:
    type: object
    required:
      - assetId
      - id
      - name
    properties:
      assetId:
        type: string
      id:
        type: integer
        format: int32
      name:
        type: string
  DomainAssetGroup:
    type: object
    required:
      - id
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
  DeviceGroup:
    type: object
    required:
      - id
      - deviceId
      - name
    properties:
      id:
        type: integer
        format: int32
      deviceId:
        type: string
      name:
        type: string
  DomainDeviceGroup:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
  DomainUserGroup:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      email:
        type: string
      primaryPhone:
        type: string
      locale:
        type: string
      timezone:
        type: string
      workStart:
        type: integer
        format: int16
      workEnd:
        type: integer
        format: int16
      workDays:
        type: array
        items:
          type: integer
          format: int16
  DeviceModel:
    type: object
    required:
      - id
      - version
    properties:
      id:
        type: string
      version:
        type: string
      description:
        type: string
      registeredStamp:
        type: integer
        format: int64
  Firmware:
    type: object
    required:
      - deviceModel
      - version
    properties:
      deviceModel:
        type: string
      version:
        type: string
      description:
        type: string
      fileName:
        type: string
      contentType:
        type: string
      createAt:
        type: integer
        format: int64
  Device:
    type: object
    discriminator: deviceType
    required:
      - id
      - modelId
      - version
    properties:
      id:
        type: string
      modelId:
        type: string
      version:
        type: string
      name:
        type: string
      description:
        type: string
      registeredStamp:
        type: integer
        format: int64
      password:
        type: string
      assetId:
        type: string
  FCMDevice:
    allOf:
    - $ref: '#/definitions/Device'
    - type: object
      required:
       - 'fcmToken'
      properties:
        fcmToken:
          type: string
  Asset:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      registeredStamp:
        type: integer
        format: int64
  Template:
    type: object
    required:
    - name
    - lang
    - code
    properties:
      name:
        type: string
      lang:
        type: string
        enum:
          - JTWIG
      code:
        type: string
  Rule:
    type: object
    discriminator: ruleType
    required:
    - lang
    - code
    properties:
      lang:
        type: string
        enum:
          - GROOVY
          - JS
      code:
        type: string
  DomainRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
  MessageRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'messageId'
      properties:
        messageId:
          type: integer
          format: int32
        messageName:
          type: string
  ScheduledRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'id'
       - 'pattern'
      properties:
        id:
          type: integer
          format: int32
        pattern:
          type: string
  NamedRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'name'
      properties:
        name:
          type: string
  PushResult:
    type: object
    required:
      - muid
    properties:
      muid:
        type: string
        description: message unique identifier
  MessageHeader:
    type: object
    properties:
      key:
        type: string
        description: domain key
      api:
        type: string
        description: domain api-key
      did:
        type: string
        description: device id
      dmdl:
        type: string
        description: device model
      fwver:
        type: string
        description: device firmware version
      mid:
        type: integer
        format: int32
        description: message identifier
    required:
      - key
      - api
      - did
      - dmdl
      - fwver
      - mid
  PushMessage:
    type: object
    properties:
      header:
        $ref: '#/definitions/MessageHeader'
      data:
        type: string
        description: message payload JSON object
    required:
      - header
      - data
  DeviceMessage:
    type: object
    properties:
      header:
        type: string
        description: message header JSON object
      data:
        type: string
        description: message payload JSON object
      receivedStamp:
        type: integer
        format: int64
      id:
        type: string
        format: uuid
      messageId:
        type: integer
        format: int32
      nodeId:
        type: string
      nodeUUID:
        type: string
        format: uuid
      deviceModel:
        type: string
      firmwareVersion:
        type: string
      ipAddress:
        type: string
      port:
        type: integer
        format: int32
      channel:
        type: string
        enum:
          - HTTP
          - MQTT
          - UDP
          - TCP
          - COAP
          - FCM
    required:
      - header
      - data
  Command:
    type: object
    discriminator: commandType
    required:
    - data
    - deviceIds
    properties:
      data:
        type: string
      deviceIds:
        type: array
        items:
          type: string
  BroadcastCommand:
    type: object
    discriminator: commandType
    required:
    - data
    properties:
      data:
        type: string
      filters:
        type: array
        items:
          type: string
  CommandStatus:
    type: object
    required:
      - deviceId
      - corrId
      - status
    properties:
      deviceId:
        type: string
      corrId:
        type: integer
        format: int64
        description: unique command identifier or this device
      status:
        type: string
        enum:
          - QUEUED
          - NOT_FOUND
          - NOT_CONNECTED
          - SENT
          - FAILED
          - ACKED
          - NACKED
          - NOT_ALLOWED
          - CHANNEL_INACTIVE
      createdStamp:
        type: integer
        format: int64
      queuedStamp:
        type: integer
        format: int64
      sentStamp:
        type: integer
        format: int64
      ackedStamp:
        type: integer
        format: int64
      commandType:
        type: string
        enum:
          - JSON_COMMAND
          - RAW_COMMAND
      dataChannel:
        type: string
        enum:
          - UDP
          - MQTT
          - HTTP
          - COAP
          - TCP
          - FCM
      nodeId:
        type: string
      nodeUid:
        type: string
        format: uuid
      description:
        type: string
      reportedIp:
        type: string
      reportedPort:
        type: integer
        format: int32
  Storable:
    type: object
    discriminator: storableType
    properties:
      dataType:
        type: string
        enum:
          - VARCHAR
          - TEXT
          - BOOLEAN
          - BIGINT
          - BLOB
          - DOUBLE
          - FLOAT
          - INTEGER
          - DATE
          - TIMESTAMP
          - UUID
      format:
        type: string
        description: Required if **dataType** is **blob**
        enum:
          - AS_IS
          - JSON
          - HEX
          - BASE64
      label:
        type: string
      description:
        type: string
  Property:
    allOf:
    - $ref: '#/definitions/Storable'
    - type: object
      discriminator: propertyType
      required:
      - 'name'
      - 'value'
      properties:
        name:
          type: string
        value:
          type: string
  DeviceProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'deviceId'
      properties:
        deviceId:
          type: string
  DeviceModelProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'deviceModelId'
      properties:
        deviceModelId:
          type: string
  DeviceGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'deviceId'
      - 'deviceGroupId'
      properties:
        deviceId:
          type: string
        deviceGroupId:
          type: integer
          format: int32
  AssetProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'assetId'
      properties:
        assetId:
          type: string
  AssetGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'assetId'
      - 'assetGroupId'
      properties:
        assetId:
          type: string
        assetGroupId:
          type: integer
          format: int32
  UserProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'userId'
      properties:
        userId:
          type: string
  UserGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'userId'
      - 'userGroupId'
      properties:
        userId:
          type: string
        userGroupId:
          type: integer
          format: int32
  DomainProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
  DomainDeviceGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'groupId'
      properties:
        groupId:
          type: integer
          format: int32
  DomainUserGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'groupId'
      properties:
        groupId:
          type: integer
          format: int32
  DomainAssetGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'groupId'
      properties:
        groupId:
          type: integer
          format: int32
  GeofenceProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'geofenceName'
      properties:
        geofenceName:
          type: string
  MessageField:
    allOf:
    - $ref: '#/definitions/Storable'
    - type: object
      required:
       - 'name'
      properties:
        name:
          type: string
  MessageSpecification:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      label:
        type: string
      description:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/MessageField'
    required:
      - id
      - name
      - fields
  CommandField:
    allOf:
    - $ref: '#/definitions/Storable'
    - type: object
      required:
       - 'commandId'
       - 'name'
      properties:
        commandId:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
  CommandDefinition:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      description:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/CommandField'
    required:
      - id
      - name
      - fields
  RecordField:
    allOf:
    - $ref: '#/definitions/Storable'
    - type: object
      required:
       - 'name'
      properties:
        name:
          type: string
  RecordDefinition:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      description:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/RecordField'
    required:
      - id
      - name
      - fields
  Param: 
    type: 'object'
    required: 
      - 'name'
    properties: 
      name: 
        type: 'string'
      value: 
        type: 'string'
  SearchQuery:
    type: object
    discriminator: searchQueryType
    required:
      - 'method'
    properties:
      method:
        type: string
        enum:
          - GET
          - POST
          - HEAD
          - PUT
          - DELETE
          - OPTIONS
          - TRACE
      extraPath:
        type: string
      query:
        type: string
        description: ElasticSearch Query String
      params:
        type: array
        items:
          $ref: '#/definitions/Param'
  TemplateQuery:
    type: object
    discriminator: templateQueryType
    required:
      - 'method'
      - 'templateName'
    properties:
      method:
        type: string
        enum:
          - GET
          - POST
          - HEAD
          - PUT
          - DELETE
          - OPTIONS
          - TRACE
      systemTemplate:
        type: boolean
      templateName:
        type: string
      mergeContent:
        type: string
        description: Merging JSON string
      extraPath:
        type: string
      params:
        type: array
        items:
          $ref: '#/definitions/Param'
  SearchResult:
    type: object
    required:
      - httpCode
    properties:
      httpCode:
        type: integer
        format: int32
      result:
        type: string
  Event:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      subject:
        type: string
      content:
        type: string
  EventRegistration:
    type: object
    required:
      - id
      - channel
      - address
    properties:
      id:
        type: integer
        format: int32
      channel:
        type: string
        enum:
          - 'EMAIL'
          - 'SMS'
          - 'VOICE'
          - 'FCM'
      address:
        type: string
  ScriptResult:
    type: object
    required:
      - session
    properties:
      session:
        type: string
        format: uuid
  Geofence:
    type: object
    required:
      - name
      - geoType
    properties:
      name:
        type: string
      geoType:
        type: string
      label:
        type: string
      description:
        type: string
      coordinates:
        type: string
      radius:
        type: string
      geometries:
        type: string
      createdAt:
        type: integer
        format: int64
  Location:
    type: object
    required:
      - assetId
    properties:
      assetId:
        type: string
      at:
        type: string
        format: uuid
      lat:
        type: number
        format: double
      lon:
        type: number
        format: double
      deviceId:
        type: string
  Count:
    type: object
    required:
      - total
    properties:
      total:
        type: integer
        format: int64
  OTABatch:
    type: object
    discriminator: otaBatchType
    required:
      - id
      - state
      - toModel
      - toVersion
      - createdAt
      - expireAt
    properties:
      id:
        type: string
        format: uuid
      state:
        type: string
        enum:
          - CREATING
          - CREATED
          - RUNNING
          - CANCELLED
          - FAILED
          - PARTIAL_COMPLETE
          - COMPLETE        
      name:
        type: string
      message:
        type: string
      toModel:
        type: string
      toVersion:
        type: string
      createdAt:
        type: integer
        format: int64
      expireAt:
        type: integer
        format: int64
      finishedAt:
        type: integer
        format: int64
  OTAModelBatch:
    allOf:
    - $ref: '#/definitions/OTABatch'
    - type: object
    required:
      - fromModel
      - fromVersion
    properties:
      fromModel:
        type: string
      fromVersion:
        type: string
  OTADeviceBatch:
    allOf:
    - $ref: '#/definitions/OTABatch'
    - type: object
  OTABatchMember:
    type: object
    discriminator: otaBatchMemberType
    required:
      - id
      - deviceId
      - state
    properties:
      id:
        type: string
        format: uuid
      deviceId:
        type: string
      state:
        type: string
        enum:
          - PENDING
          - DOWNLOADING
          - FAILED
          - SUCCESS
      beginStamp:
        type: integer
        format: int64
      endStamp:
        type: integer
        format: int64
      failures:
        type: integer
        format: int32
  OTAModelBatchMember:
    allOf:
    - $ref: '#/definitions/OTABatchMember'
    - type: object
  OTADeviceBatchMember:
    allOf:
    - $ref: '#/definitions/OTABatchMember'
    - type: object
  FirmwareInfo:
    type: object
    required:
      - model
      - version
    properties:
      model:
        type: string
      version:
        type: string
  Script:
    type: object
    required:
      - sessionId
      - code
    properties:
      sessionId:
        type: string
        format: uuid
      code:
        type: string
  PropertyCommand:
    type: object
    required:
      - 'target'
    properties:
      target:
        type: string
        enum:
          - ASSET
          - ASSET_GROUP
          - DEVICE
          - DEVICE_GROUP
          - DEVICE_MODEL
          - DOMAIN
          - DOMAIN_ASSET_GROUP
          - DOMAIN_DEVICE_GROUP
          - DOMAIN_USER_GROUP
          - GEOFENCE
          - USER
          - USER_GROUP
      assetId:
        type: string
      deviceId:
        type: string
      deviceModelId:
        type: string
      userId:
        type: string
      geofenceId:
        type: string
      groupId:
        type: integer
        format: int32
  Lookup:
    type: object
    required:
      - 'target'
      - 'dataType'
      - 'name'
      - 'value'
    properties:
      target:
        type: string
        enum:
          - ASSET
          - ASSET_GROUP
          - DEVICE
          - DEVICE_GROUP
          - DEVICE_MODEL
          - DOMAIN
          - DOMAIN_ASSET_GROUP
          - DOMAIN_DEVICE_GROUP
          - DOMAIN_USER_GROUP
          - GEOFENCE
          - USER
          - USER_GROUP
      dataType:
        type: string
        enum:
          - BOOLEAN
          - BYTE
          - CHAR
          - SHORT
          - INT
          - LONG
          - FLOAT
          - DOUBLE
          - STRING
          - UUID
          - BLOB
      name:
        type: string
      value:
        type: string
      assetId:
        type: string
      deviceId:
        type: string
      deviceModelId:
        type: string
      userId:
        type: string
      geofenceId:
        type: string
      groupId:
        type: integer
        format: int32
  LookupGet:
    type: object
    required:
      - 'target'
      - 'name'
    properties:
      target:
        type: string
        enum:
          - ASSET
          - ASSET_GROUP
          - DEVICE
          - DEVICE_GROUP
          - DEVICE_MODEL
          - DOMAIN
          - DOMAIN_ASSET_GROUP
          - DOMAIN_DEVICE_GROUP
          - DOMAIN_USER_GROUP
          - GEOFENCE
          - USER
          - USER_GROUP
      name:
        type: string
      assetId:
        type: string
      deviceId:
        type: string
      deviceModelId:
        type: string
      userId:
        type: string
      geofenceId:
        type: string
      groupId:
        type: integer
        format: int32
  LookupResult:
    type: object
    required:
      - 'dataType'
      - 'name'
      - 'value'
    properties:
      dataType:
        type: string
        enum:
          - BOOLEAN
          - BYTE
          - CHAR
          - SHORT
          - INT
          - LONG
          - FLOAT
          - DOUBLE
          - STRING
          - UUID
          - BLOB
      name:
        type: string
      value:
        type: string
  LookupDelete:
    type: object
    required:
      - 'target'
      - 'name'
    properties:
      target:
        type: string
        enum:
          - ASSET
          - ASSET_GROUP
          - DEVICE
          - DEVICE_GROUP
          - DEVICE_MODEL
          - DOMAIN
          - DOMAIN_ASSET_GROUP
          - DOMAIN_DEVICE_GROUP
          - DOMAIN_USER_GROUP
          - GEOFENCE
          - USER
          - USER_GROUP
      name:
        type: string
      assetId:
        type: string
      deviceId:
        type: string
      deviceModelId:
        type: string
      userId:
        type: string
      geofenceId:
        type: string
      groupId:
        type: integer
        format: int32
  NodeProperty:
    type: object
    required:
      - 'name'
      - 'value'
    properties:
      name:
        type: string
      value:
        type: string
  ClusterNode:
    type: object
    properties:
      nodeId:
        type: string
      nodeUid:
        type: string
      consistentId:
        type: string
      addresses:
        type: array
        items:
          type: string
      hostNames:
        type: array
        items:
          type: string
      props:
        type: array
        items:
          $ref: '#/definitions/NodeProperty'
  EmailGateway:
    type: object
    required:
      - 'host'
      - 'port'
      - 'user'
      - 'password'
      - 'primaryEmail'
    properties:
      host:
        type: string
      port:
        type: integer
        format: int32
      user:
        type: string
      password:
        type: string
      primaryEmail:
        type: string
      bounceEmail:
        type: string
      ssl:
        type: boolean
      tls:
        type: boolean
      debug:
        type: boolean
  TwilioGateway:
    type: object
    required:
      - 'sid'
      - 'token'
      - 'primaryPhone'
    properties:
      sid:
        type: string
      token:
        type: string
      primaryPhone:
        type: string
      debug:
        type: boolean
  FCMGateway:
    type: object
    required:
      - 'apiKey'
    properties:
      apiKey:
        type: string
      debug:
        type: boolean
  UDPGateway:
    type: object
    required:
      - 'port'
      - 'threads'
    properties:
      port:
        type: integer
        format: int32
      threads:
        type: integer
        format: int32
      decoderCode:
        type: string
  GoogleMaps:
    type: object
    required:
      - 'apiKey'
    properties:
      apiKey:
        type: string
  Counter:
    type: object
    discriminator: counterType
    required:
    - users
    - devices
    - udpMessages
    - mqttMessages
    - httpMessages
    - fcmMessages
    - coapMessages
    - tcpMessages
    - commands
    - domains
    properties:
      users:
        type: integer
        format: int64
      devices:
        type: integer
        format: int64
      udpMessages:
        type: integer
        format: int64
      mqttMessages:
        type: integer
        format: int64
      httpMessages:
        type: integer
        format: int64
      fcmMessages:
        type: integer
        format: int64
      coapMessages:
        type: integer
        format: int64
      tcpMessages:
        type: integer
        format: int64
      commands:
        type: integer
        format: int64
      domains:
        type: integer
        format: int64
  DomainCounter:
    allOf:
    - $ref: '#/definitions/Counter'
    - type: object
      required:
       - 'domainKey'
      properties:
        domainKey:
          type: string
  DomainLicense:
    type: object
    properties:
      domainKey:
        type: string
      type:
        type: string
        enum:
          - DEVELOPER
          - DIY
          - CLOUD
          - SUBSCRIPTION
          - PERPETUAL
      state:
        type: string
        enum:
          - ACTIVE
          - CANCELLED
          - SUSPENDED
          - NOT_PAID
      nodes:
        type: integer
        format: int32
      cores:
        type: integer
        format: int32
      devices:
        type: integer
        format: int32
      messagePerDay:
        type: integer
        format: int32
      features:
        type: array
        items:
          type: string
  GDResult:
    type: object
    required:
    - id
    properties:
      id:
        type: string
        format: uuid
  GlobalData:
    type: object
    required:
    - data
    properties:
      data:
        type: string
  FRModel:
    type: object
    required:
    - name
    - algorithm
    - imageWidth
    - imageHeight
    - trainEvery
    properties:
      name:
        type: string
      algorithm:
        type: string
        enum:
          - EIGEN
          - FISHER
          - LBPH
      imageWidth:
        type: integer
        format: int32
      imageHeight:
        type: integer
        format: int32
      trainEvery:
        type: integer
        format: int32
      createdAt:
        type: integer
        format: int64
      trainedAt:
        type: integer
        format: int64
  FRModelInfo:
    type: object
    required:
    - name
    - labels
    properties:
      name:
        type: string
      labels:
        type: integer
        format: int32
  FRLabelInfo:
    type: object
    required:
    - label
    - count
    properties:
      label:
        type: string
      count:
        type: integer
        format: int32
  FRModelList:
    type: object
    required:
    - total
    properties:
      total:
        type: integer
        format: int32
      names:
        type: array
        items:
          $ref: '#/definitions/FRModelInfo'
  FRLabelList:
    type: object
    required:
    - total
    properties:
      total:
        type: integer
        format: int32
      labels:
        type: array
        items:
          $ref: '#/definitions/FRLabelInfo'
  FRImageList:
    type: object
    required:
    - total
    properties:
      total:
        type: integer
        format: int32
      lastId:
        type: string
        format: uuid
      urls:
        type: array
        items:
          type: string
  FRPredict:
    type: object
    properties:
      label:
        type: string
      distance:
        type: number
        format: double
  FRPredictList:
    type: object
    properties:
      predictions:
        type: array
        items:
          $ref: '#/definitions/FRPredict'
  MLAttribute:
    type: object
    required:
    - name
    - type
    properties:
      name:
        type: string
      type:
        type: string
        enum:
          - INTEGER
          - REAL
          - NUMERIC
          - STRING
          - DATE
          - STRINGS
          - BOOLEANS
          - SHORTS
          - INTEGERS
          - LONGS
          - FLOATS
          - DOUBLES
      dateFormat:
        type: string
      nominals:
        type: array
        items:
          type: string
  MLModel:
    type: object
    required:
    - relation
    - classifier
    - predictionType
    - trainEvery
    - attributes
    properties:
      relation:
        type: string
      classifier:
        type: string
        enum:
          - AdaBoostM1
          - AdditiveRegression
          - AttributeSelectedClassifier
          - Bagging
          - BayesNet
          - BayesNetGenerator
          - BIFReader
          - ClassificationViaRegression
          - CostSensitiveClassifier
          - CVParameterSelection
          - DecisionStump
          - DecisionTable
          - EditableBayesNet
          - FilteredClassifier
          - GaussianProcesses
          - GeneralRegression
          - HoeffdingTree
          - IBk
          - InputMappedClassifier
          - IteratedSingleClassifierEnhancer
          - IterativeClassifierOptimizer
          - J48
          - JRip
          - KStar
          - LinearRegression
          - LMT
          - LMTNode
          - Logistic
          - LogisticBase
          - LogitBoost
          - LWL
          - M5Base
          - M5P
          - M5Rules
          - MultiClassClassifier
          - MultiClassClassifierUpdateable
          - MultilayerPerceptron
          - MultipleClassifiersCombiner
          - MultiScheme
          - NaiveBayes
          - NaiveBayesMultinomial
          - NaiveBayesMultinomialText
          - NaiveBayesMultinomialUpdateable
          - NaiveBayesUpdateable
          - NeuralNetwork
          - OneR
          - ParallelIteratedSingleClassifierEnhancer
          - ParallelMultipleClassifiersCombiner
          - PART
          - PMMLClassifier
          - PreConstructedLinearModel
          - RandomCommittee
          - RandomForest
          - RandomizableClassifier
          - RandomizableFilteredClassifier
          - RandomizableIteratedSingleClassifierEnhancer
          - RandomizableMultipleClassifiersCombiner
          - RandomizableParallelIteratedSingleClassifierEnhancer
          - RandomizableParallelMultipleClassifiersCombiner
          - RandomizableSingleClassifierEnhancer
          - RandomSubSpace
          - RandomTree
          - Regression
          - RegressionByDiscretization
          - REPTree
          - RuleNode
          - RuleSetModel
          - SerializedClassifier
          - SGD
          - SGDText
          - SimpleLinearRegression
          - SimpleLogistic
          - SingleClassifierEnhancer
          - SMO
          - SMOreg
          - Stacking
          - SupportVectorMachineModel
          - TreeModel
          - Vote
          - VotedPerceptron
          - WeightedInstancesHandlerWrapper
          - ZeroR
      predictionType:
        type: string
        enum:
          - STRINGS
          - BOOLEANS
          - INTEGERS
          - SHORTS
          - LONGS
          - FLOATS
          - DOUBLES
      trainEvery:
        type: integer
        format: int32
      createdAt:
        type: integer
        format: int64
      trainedAt:
        type: integer
        format: int64
      attributes:
        type: array
        items:
          $ref: "#/definitions/MLAttribute"
  MLModelInfo:
    type: object
    required:
    - records
    - relation
    - classifier
    - predictionType
    properties:
      records:
        type: integer
        format: int64
      relation:
        type: string
      classifier:
        type: string
      predictionType:
        type: string
      trainEvery:
        type: integer
      createdAt:
        type: integer
        format: int64
      trainedAt:
        type: integer
        format: int64
  MLModelList:
    type: object
    required:
    - total
    properties:
      total:
        type: integer
        format: int32
      models:
        type: array
        items:
          $ref: '#/definitions/MLModelInfo'
  MLDataList:
    type: object
    required:
    - total
    - lastId
    properties:
      total:
        type: integer
        format: int64
      lastId:
        type: string
        format: uuid
      data:
        type: array
        items:
          type: string
  MLData:
    type: object
    required:
    - items
    properties:
      items:
        type: array
        items:
          type: string
  OpenCVModel:
    type: object
    required:
    - model
    properties:
      model:
        type: string
      description:
        type: string
      state:
        type: string
        enum:
          - NOT_READY
          - READY
          - DIRTY
  OpenCVModelCount:
    type: object
    required:
      - total
      - cascades
    properties:
      total:
        type: integer
        format: int64
      cascades:
        type: integer
        format: int64
  OpenCVModelCascade:
    type: object
    required:
    - label
    properties:
      label:
        type: string
      description:
        type: string
      color:
        type: string
      minSize:
        type: string
      maxSize:
        type: string
      scaleFactor:
        type: number
        format: double
      minNeighbours:
        type: integer
        format: int32
      flags:
        type: integer
        format: int32
      fontFace:
        type: integer
        format: int32
      fontScale:
        type: number
        format: double
      minScore:
        type: number
        format: double
      overlayText:
        type: boolean
      overlayType:
        type: string
        enum:
          - RECTANGLE
          - CIRCLE
          - TEXT
      cascadeSize:
        type: integer
        format: int32
  OpenCVORLabel:
    type: object
    required:
    - label
    - score
    properties:
      label:
        type: string
      score:
        type: number
        format: double
      overlayType:
        type: string
        enum:
          - RECTANGLE
          - CIRCLE
          - TEXT
      x:
        type: integer
        format: int32
      y:
        type: integer
        format: int32
      width:
        type: integer
        format: int32
      height:
        type: integer
        format: int32
  OpenCVPredictResult:
    type: object
    required:
    - labels
    properties:
      labels:
        type: array
        items:
          $ref: "#/definitions/OpenCVORLabel"
      image:
        type: string
  TensorFlowModel:
    type: object
    required:
    - model
    properties:
      model:
        type: string
      description:
        type: string
      fontFace:
        type: integer
        format: int32
      fontScale:
        type: number
        format: double
      minScore:
        type: number
        format: double
      overlayText:
        type: boolean
      overlayType:
        type: string
        enum:
          - RECTANGLE
          - CIRCLE
          - TEXT
      graphSize:
        type: integer
        format: int32
      labelSize:
        type: integer
        format: int32
  TensorFlowORLabel:
    type: object
    required:
    - label
    - score
    properties:
      label:
        type: string
      score:
        type: number
        format: double
      overlayType:
        type: string
        enum:
          - RECTANGLE
          - CIRCLE
          - TEXT
      x:
        type: integer
        format: int32
      y:
        type: integer
        format: int32
      width:
        type: integer
        format: int32
      height:
        type: integer
        format: int32
  TensorFlowPredictResult:
    type: object
    required:
    - labels
    properties:
      labels:
        type: array
        items:
          $ref: "#/definitions/TensorFlowORLabel"
      image:
        type: string
  MessageORSetting:
    type: object
    required:
    - messageId
    - messageField
    - orType
    - orModel
    properties:
      messageId:
        type: integer
        format: int32
      messageField:
        type: string
      orType:
        type: string
        enum:
          - FR
          - OR_OPENCV
          - OR_TENSORFLOW
      orModel:
        type: string
      namedRule:
        type: string
      description:
        type: string
  InsertResult:
    type: object
    required:
      - rkey
    properties:
      rkey:
        type: string
        description: record unique identifier
  GroovyScript:
    type: object
    required:
      - code
    properties:
      code:
        type: string
  TemplateScript:
    type: object
    properties:
      templateArgs:
        type: string
      scriptArgs:
        type: string
  RuleScript:
    type: object
    properties:
      scriptArgs:
        type: string
  CallOutput:
    type: object
    required:
      - jsonResult
    properties:
      jsonResult:
        type: string
  IDResult:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        format: uuid
  FileContent:
    type: object
    required:
      - content
      - format
    properties:
      content:
        type: string
      format:
        type: string
        enum:
          - BASE64
          - HEX
          - AS_IS
      ispublic:
        type: boolean
      id:
        type: string
        format: uuid
  TextContent:
    type: object
    required:
      - content
    properties:
      content:
        type: string
